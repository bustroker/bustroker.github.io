<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Powershell on Coding notes</title>
    <link>https://www.bustroker.com/tags/powershell/</link>
    <description>Recent content in Powershell on Coding notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Apr 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.bustroker.com/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Query sql server from powershell</title>
      <link>https://www.bustroker.com/notes/query-sql-server-from-powershell/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/query-sql-server-from-powershell/</guid>
      <description>Query sqlserver powershell module Install-Module sqlserver -Force A minimun nuget version is required. A messages provides the command to install it if was required.&#xA;Run query Invoke-Sqlcmd -Query &amp;#34;SELECT GETDATE() AS TimeOfQuery&amp;#34; -ServerInstance &amp;#34;localhost&amp;#34; Run script Invoke-Sqlcmd -InputFile &amp;#34;C:\setupscripts\createUser.sql&amp;#34; | Out-File -FilePath &amp;#34;C:\setupscripts\createUser.log&amp;#34; </description>
    </item>
    <item>
      <title>Install sql server unattended from Powershell</title>
      <link>https://www.bustroker.com/notes/install-sql-server-unattended-from-powershell/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/install-sql-server-unattended-from-powershell/</guid>
      <description>Download installation from here, run it and use the option Download Media.&#xA;To install Express edition, run powershell as admin and go cd C:\SQL2019\SQLEXPR_x64_ENU .\setup.exe /Q /HIDECONSOLE=0 /ACTION=INSTALL /SUPPRESSPRIVACYSTATEMENTNOTICE /IACCEPTSQLSERVERLICENSETERMS=1 /FEATURES=SQLENGINE /UPDATEENABLED=0 /INSTANCENAME=&amp;#34;MSSQLSERVER&amp;#34; /ADDCURRENTUSERASSQLADMIN=1 /SECURITYMODE=SQL /SKIPRULES=RebootRequiredCheck /SAPWD=&amp;#34;Pasword_01&amp;#34; /SQLSVCSTARTUPTYPE=AUTOMATIC /INDICATEPROGRESS For Developer edition, run powershell as admin and go cd C:\SQL2019\Developer_ENU .\setup.exe /q /ACTION=Install /INSTANCENAME=MSSQLSERVER /FEATURES=SQLEngine /UPDATEENABLED=0 /SQLSVCACCOUNT=&amp;#39;NT AUTHORITY\NETWORK SERVICE&amp;#39; /SQLSYSADMINACCOUNTS=&amp;#39;BUILTIN\ADMINISTRATORS&amp;#39; /TCPENABLED=1 /NPENABLED=0 /IACCEPTSQLSERVERLICENSETERMS /INDICATEPROGRESS /SECURITYMODE=SQL /SAPWD=&amp;#34;Password_01&amp;#34; To uninstall&#xA;.\setup.exe /q /ACTION=Uninstall /INSTANCENAME=MSSQLSERVER /FEATURES=SQLEngine /INDICATEPROGRESS </description>
    </item>
    <item>
      <title>Powershell cheatsheet</title>
      <link>https://www.bustroker.com/notes/powershell-cheatsheet/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/powershell-cheatsheet/</guid>
      <description>Bypass digitally sign constrain for scripts execution Run powershell as Administrator.&#xA;Set-ExecutionPolicy -ExecutionPolicy Unrestricted List environment variables Get-ChildItem -Path Env:\ Also, using .net from powershell, and specifying system-level variables, by specifying machine as second argument. This argument could also be user&#xA;[System.Environment]::GetEnvironmentVariable(&amp;#39;VARIABLE_NAME&amp;#39;,&amp;#39;machine&amp;#39;) For some reason, the previous doesn&amp;rsquo;t work for variable COMPUTERNAME. To get computer name:&#xA;$env:computername Set environment variable Run powershell as Admin.&#xA;new variable [System.Environment]::SetEnvironmentVariable(&amp;#39;VARIABLE_NAME&amp;#39;, &amp;#39;VARIABLE_VALUE&amp;#39;,[System.EnvironmentVariableTarget]::Machine) add to an existing variable (typically to PATH) $current=[System.</description>
    </item>
  </channel>
</rss>
