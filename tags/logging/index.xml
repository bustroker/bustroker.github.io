<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Logging on Coding notes</title>
    <link>https://www.bustroker.com/tags/logging/</link>
    <description>Recent content in Logging on Coding notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.bustroker.com/tags/logging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Observability notes</title>
      <link>https://www.bustroker.com/notes/observability-notes/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/observability-notes/</guid>
      <description>How the Full Setup Works Together (Assuming All Are Set Up) 1. ILogger&amp;lt;T&amp;gt; as the unified logging interface Your app writes logs using ILogger&amp;lt;T&amp;gt;, and the EvLoggingBuilder setup routes these logs to all configured sinks based on:&#xA;Configured log levels Sink-specific filters Environment settings (e.g., dev vs prod) Example:&#xA;_logger.LogWarning(&amp;#34;Something might be wrong here&amp;#34;); This log could go to:&#xA;Console (if enabled) Elasticsearch (structured, for querying) Sentry (if it&amp;rsquo;s an error and meets Sentry&amp;rsquo;s criteria) Sink Behavior Overview Sink Captures Triggered By Key Value Console Logs All levels (e.</description>
    </item>
  </channel>
</rss>
