<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Coding notes</title>
    <link>https://www.bustroker.com/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Coding notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bustroker.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes (1.7) commands cheatsheet</title>
      <link>https://www.bustroker.com/notes/kubernetes-1.7-commands-cheatsheet/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.bustroker.com/notes/kubernetes-1.7-commands-cheatsheet/</guid>
      <description>Version: 1.6
Run pod from image kubectl run NAME --image=image [--env=&amp;#34;key=value&amp;#34;] Get info kubectl get pods [-o wide] kubectl describe service SERVICE_NAME kubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=NODE_NAME Delete all pods with a label kubectl delete pods -l label=value Delete all pods in a specific state pods, in Linux E.g., STATE=Evicted
kubectl get pod | grep Evicted | awk &#39;{print $1}&#39; | xargs kubectl delete podSet namespace for kubectl console session kubectl config set-context --current -n=&amp;lt;NAMESPACE&amp;gt; Validate deployment before actually applying it kubectl apply --dry-run=client -f deployment.</description>
    </item>
    
  </channel>
</rss>
