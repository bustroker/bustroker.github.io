<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding notes</title>
    <link>https://www.bustroker.com/</link>
    <description>Recent content on Coding notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.bustroker.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API guidelines</title>
      <link>https://www.bustroker.com/notes/api-guidelines/</link>
      <pubDate>Tue, 15 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/api-guidelines/</guid>
      <description>Enterprise API Guidelines API Style Guideline Inspired by Zalando’s API Guidelines.&#xA;The requirement level keywords &amp;ldquo;MUST&amp;rdquo;, &amp;ldquo;MUST NOT&amp;rdquo;, &amp;ldquo;REQUIRED&amp;rdquo;, &amp;ldquo;SHALL&amp;rdquo;, &amp;ldquo;SHALL NOT&amp;rdquo;, &amp;ldquo;SHOULD&amp;rdquo;, &amp;ldquo;SHOULD NOT&amp;rdquo;, &amp;ldquo;RECOMMENDED&amp;rdquo;, &amp;ldquo;MAY&amp;rdquo;, and &amp;ldquo;OPTIONAL&amp;rdquo; used in this document (case insensitive) are to be interpreted as described in RFC 2119.&#xA;A. API Specification and Documentation MUST provide and publish API specifications using OpenAPI.&#xA;MUST create or update API documentation in the developer portal.&#xA;SHOULD provide comprehensive documentation, from straight-forward getting started examples to in-depth details on all request and response parameters.</description>
    </item>
    <item>
      <title>DevOps notes</title>
      <link>https://www.bustroker.com/notes/devops-notes/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/devops-notes/</guid>
      <description>Dotnet templates Testing locally Clone this repository Go into this directory Execute following command dotnet new -i .\templates\bkr.microservice This will install template for dotnet new usage Create directory for you microservice and go into this directory Type dotnet new bkr.microservice --name Cheese.Cake You have scaffolded new service. Distributing with package Execute dotnet pack from templates directory This will create package with templates in .\bin\Debug\Bkr.Template.Service.1.0.0.nupkg Run dotnet new -i .\bin\Debug\Bkr.Template.Service.1.0.0.nupkg This will install template for dotnet new usage Create directory for you microservice and go into this directory Type dotnet new bkr.</description>
    </item>
    <item>
      <title>Observability notes</title>
      <link>https://www.bustroker.com/notes/observability-notes/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/observability-notes/</guid>
      <description>How the Full Setup Works Together (Assuming All Are Set Up) 1. ILogger&amp;lt;T&amp;gt; as the unified logging interface Your app writes logs using ILogger&amp;lt;T&amp;gt;, and the EvLoggingBuilder setup routes these logs to all configured sinks based on:&#xA;Configured log levels Sink-specific filters Environment settings (e.g., dev vs prod) Example:&#xA;_logger.LogWarning(&amp;#34;Something might be wrong here&amp;#34;); This log could go to:&#xA;Console (if enabled) Elasticsearch (structured, for querying) Sentry (if it&amp;rsquo;s an error and meets Sentry&amp;rsquo;s criteria) Sink Behavior Overview Sink Captures Triggered By Key Value Console Logs All levels (e.</description>
    </item>
    <item>
      <title>Data Strategy</title>
      <link>https://www.bustroker.com/notes/data-strategy/</link>
      <pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/data-strategy/</guid>
      <description>Data Platform requirements 1. Vision &amp;amp; Objectives&#xA;The company operates a SaaS platform for equity plan management. The data strategy must support:&#xA;Internal analytics and ML use cases External, self-serve data access for clients Real-time data visibility and embedded analytics Strong data governance aligned with GDPR Key objectives:&#xA;Build a data mesh architecture with decentralized ownership Leverage Databricks (Spark, Delta Lake, Unity Catalog) as the core platform Enable real-time and batch data processing Provide self-service data access via APIs, BI tools, and direct SQL Ensure metadata management, lineage, and trust at scale 2.</description>
    </item>
    <item>
      <title>Engineering principles</title>
      <link>https://www.bustroker.com/notes/engineering-principles/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/engineering-principles/</guid>
      <description>Build gradually Gradually build Eng Principles, fundamentally based on flaws I find in Eng team, so it serves to persuade engineers in the right direction, but most importantly to dissuade them from the wrong ones.&#xA;Possibly make a distinction between Principles and more specific ¿ADRs?&#xA;Prefer simplicity over complexity. Each complexity level introduced needs a clear justification. Every processing queue SHOULD (MUST?) have have a corresponding dead letter queue </description>
    </item>
    <item>
      <title>Solution Architecture</title>
      <link>https://www.bustroker.com/notes/solution-architecture/</link>
      <pubDate>Wed, 19 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/solution-architecture/</guid>
      <description>Solutions Architecture at The Company We empower The Company to achieve strategic goals with a tech-at-core, multiproduct strategy, driving an evolutionary, business-driven, composable architecture that fosters outcome-based autonomous teams to innovate and deliver customer value at scale.&#xA;Responsibilities 1) Align product and technology strategy to enable business goals: Fully understand The Company’s business, long-term strategy, goals, and customer needs Build and maintain the architecture vision and principles Partner with business stakeholders to influence product direction (roadmap) 2) Define a composable and evolutionary architecture to promote team autonomy at scale: Map domain areas, business capabilities, system components, and team ownership Build and maintain the target architecture and roadmaps Make critical decisions on technology stack, frameworks, design patterns, and standards 3) Design solutions to meet product needs: Understand the immediate and mid-term product needs (roadmap items) Define end-to-end tech architecture solutions (frontend, backend, data, etc.</description>
    </item>
    <item>
      <title>Entityframework db connection interceptor (for RLS)</title>
      <link>https://www.bustroker.com/notes/entityframework-db-connection-interceptor-for-rls/</link>
      <pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/entityframework-db-connection-interceptor-for-rls/</guid>
      <description>Implement RLS in Azure SQL Server Create Data model CREATE TABLE Companies ( CompanyId UNIQUEIDENTIFIER PRIMARY KEY, Name NVARCHAR(255) ); CREATE TABLE Providers ( ProviderId UNIQUEIDENTIFIER PRIMARY KEY, Name NVARCHAR(255) ); CREATE TABLE CompanyProviderAccess ( CompanyId UNIQUEIDENTIFIER REFERENCES Companies(CompanyId), ProviderId UNIQUEIDENTIFIER REFERENCES Providers(ProviderId), PRIMARY KEY (CompanyId, ProviderId) ); CREATE TABLE Orders ( OrderId UNIQUEIDENTIFIER PRIMARY KEY, ProviderId UNIQUEIDENTIFIER REFERENCES Providers(ProviderId), Data NVARCHAR(MAX) -- Sample data column ); CompanyProviderAccess links companies to the providers they are allowed to access.</description>
    </item>
    <item>
      <title>Generate and diff openAPI specs in dotnet</title>
      <link>https://www.bustroker.com/notes/generate-and-diff-openapi-specs-in-dotnet/</link>
      <pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/generate-and-diff-openapi-specs-in-dotnet/</guid>
      <description>Setup generation of open api spec json Using swashbuckle&#xA;dotnet add package Swashbuckle.AspNetCore.Swagger dotnet tool install --global Swashbuckle.AspNetCore.Cli dotnet build Generate openAPI spec dotnet build swagger tofile --output &amp;#34;openapi.json&amp;#34; bin/Debug/net8.0/bkr-provider-api.dll [version] # e.g swagger tofile --output &amp;#34;openapi.json&amp;#34; bin/Debug/net8.0/bkr-provider-api.dll v1 OpenAPI diff https://github.com/OpenAPITools/openapi-diff Compare two openAPI specs to find breaking changes in the contract. openapi-diff &amp;lt;old&amp;gt; &amp;lt;new&amp;gt;&#xA;# two openapi specs from files docker run --rm -v ${PWD}:/spec openapitools/openapi-diff /spec/openapi_v4.json /spec/openapi_v5.json # spec from url.</description>
    </item>
    <item>
      <title>Save and restore vs code settings</title>
      <link>https://www.bustroker.com/notes/save-and-restore-vs-code-settings/</link>
      <pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/save-and-restore-vs-code-settings/</guid>
      <description>Save vs code settings to current folder (optionally provider save targer folder path) param( [string]$destinationPath = &amp;#34;.&amp;#34; ) # Resolve full path $destinationPath = Resolve-Path -Path $destinationPath # Define the source directory $sourcePath = &amp;#34;$env:APPDATA\Code\User&amp;#34; # Ensure the destination folder exists if (!(Test-Path -Path $destinationPath)) { New-Item -ItemType Directory -Path $destinationPath | Out-Null } # Copy settings.json, keybindings.json, and snippets if they exist $files = @(&amp;#34;settings.json&amp;#34;, &amp;#34;keybindings.json&amp;#34;) $snippetsPath = &amp;#34;$sourcePath\snippets&amp;#34; foreach ($file in $files) { $filePath = &amp;#34;$sourcePath\$file&amp;#34; if (Test-Path -Path $filePath) { Copy-Item -Path $filePath -Destination $destinationPath -Force Write-Host &amp;#34;Copied $file to $destinationPath&amp;#34; } else { Write-Host &amp;#34;$file not found, skipping.</description>
    </item>
    <item>
      <title>Run WSL (Windows Subsystem for Linux)</title>
      <link>https://www.bustroker.com/notes/run-wsl-windows-subsystem-for-linux/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-wsl-windows-subsystem-for-linux/</guid>
      <description>Open git bash (better for linux than powershell I believe) and run&#xA;wsl --list --online wsl --install Ubuntu Run docker on windows folder cd /mnt/c/Users/bustroker/windowsfolder$ docker run --rm -v $(pwd):/windowsfolder openapitools/openaexpi-diff /windowsfolder/openapi_v2.json /windowsfolder/openapi_v3.json </description>
    </item>
    <item>
      <title>Remove `curl` alias from powershell permanently</title>
      <link>https://www.bustroker.com/notes/remove-curl-alias-from-powershell-permanently/</link>
      <pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/remove-curl-alias-from-powershell-permanently/</guid>
      <description>It&amp;rsquo;s Powershell, not Windows Powershell.&#xA;Check for existing powershell profile Test-Path $PROFILE If true, already exists, skip creation. Otherwise create it&#xA;New-Item -Path $PROFILE -ItemType File -Force Open profile in notepad notepad $profile Add this line to the profile, save and close&#xA;Remove-Item Alias:curl -ErrorAction SilentlyContinue Restart powershell&#xA;If the alias is not removed after restart Ensure PowerShell is set to allow profile scripts by running&#xA;Set-ExecutionPolicy RemoteSigned -Scope CurrentUser </description>
    </item>
    <item>
      <title>Add image to hugo site</title>
      <link>https://www.bustroker.com/notes/add-image-to-hugo-site/</link>
      <pubDate>Tue, 11 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/add-image-to-hugo-site/</guid>
      <description>In Hugo, you can add images to your page in several ways depending on where your images are stored. Here are the main methods:&#xA;1. Using Page Bundles (Recommended) If you&amp;rsquo;re using page bundles, place the image inside the same folder as your markdown file.&#xA;Steps: Place the image inside the same directory as the markdown file: content/posts/my-post/&#xD;├── index.md&#xD;├── my-image.jpg In index.md, reference the image using: ![Alt text](my-image.jpg) or !</description>
    </item>
    <item>
      <title>Github actions</title>
      <link>https://www.bustroker.com/notes/github-actions/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/github-actions/</guid>
      <description>Workflow to promote latest -rc image to release # It&amp;#39;s expected that when the new release candidate tag x.y.z is added by this workflow # to the latest x.y.z-rc image, a deployment is triggered to PRO environment name: Promote Latest RC Images to Release. Deploy to prod. on: workflow_dispatch: permissions: contents: read id-token: write jobs: promote-images: runs-on: ubuntu-latest strategy: matrix: repository: - atoss-identity-secrets-setup - atoss-identity-svc steps: - name: Checkout repository uses: actions/checkout@v4 - name: Configure AWS credentials uses: aws-actions/configure-aws-credentials@v4 with: role-to-assume: arn:aws:iam::XXXXXXXXXX:role/github/atoss-identity-deploy-role aws-region: eu-central-1 - name: Promote rc image to release uses: .</description>
    </item>
    <item>
      <title>Go hello world with regex</title>
      <link>https://www.bustroker.com/notes/go-hello-world-with-regex/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/go-hello-world-with-regex/</guid>
      <description>FluxCD Image policy applies regex to select latest tag. FluxCD uses go regex, so this go app tests a regex.&#xA;Create project # create go module go mod init atoss-regex # create main file touch main.go Code&#xA;// main.go package main import ( &amp;#34;fmt&amp;#34; &amp;#34;regexp&amp;#34; ) func main() { // pattern := `^(?P&amp;lt;version&amp;gt;[0-9]+\.[0-9]+\.[0-9]+)$` pattern := `^(?P&amp;lt;version&amp;gt;[0-9]+\\.[0-9]+\\.[0-9]+)$` // pattern := `^([0-9]+\\.[0-9]+\\.[0-9]+)$` tags := []string{ &amp;#34;v1.0.0&amp;#34;, &amp;#34;0.0.51&amp;#34;, &amp;#34;0.0.16&amp;#34;, &amp;#34;2.1.0&amp;#34;, &amp;#34;1.2.3&amp;#34;, &amp;#34;v0.9.8&amp;#34;, &amp;#34;1.0&amp;#34;, &amp;#34;invalid&amp;#34;, &amp;#34;1.</description>
    </item>
    <item>
      <title>dotnet scrips</title>
      <link>https://www.bustroker.com/notes/dotnet-scrips/</link>
      <pubDate>Mon, 19 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/dotnet-scrips/</guid>
      <description>Install dotnet script dotnet tool install -g dotnet-script Write csx script file with nuget package reference // script.csx #r &amp;#34;nuget:Newtonsoft.Json, 13.0.1&amp;#34; using Newtonsoft.Json; using Newtonsoft.Json.Linq; var args = Environment.GetCommandLineArgs(); if(args.Any(a =&amp;gt; a == &amp;#34;--dry-run&amp;#34;)) { return; } Console.WriteLine(&amp;#34;Using Newtonsoft.Json to parse JSON.&amp;#34;); var json = JObject.Parse(@&amp;#34;{ &amp;#39;name&amp;#39;: &amp;#39;John&amp;#39;, &amp;#39;age&amp;#39;: 30 }&amp;#34;); Console.WriteLine(json[&amp;#34;name&amp;#34;]); Run script dotnet-script script.csx </description>
    </item>
    <item>
      <title>Git stash - and patch</title>
      <link>https://www.bustroker.com/notes/git-stash-and-patch/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/git-stash-and-patch/</guid>
      <description>Stash git stash list # create or save stash git stash # or git stash push -m &amp;#34;description&amp;#34; # Apply latest Stash stash@{0} git stash apply # or git stash apply [INDEX] # Pop - Apply and Remove the latest stash: git stash pop # Drop Stash: git stash drop [INDEX] Stashes can&amp;rsquo;t be managed by name. A way to do so (like light solution for saving specific changes for specific build config), save pending changes to a file</description>
    </item>
    <item>
      <title>Install azcopy in windows from powershell</title>
      <link>https://www.bustroker.com/notes/install-azcopy-in-windows-from-powershell/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/install-azcopy-in-windows-from-powershell/</guid>
      <description>Install func cli $InstallPath = &amp;#39;C:\AzCopy&amp;#39; # Cleanup Destination if (Test-Path $InstallPath) { Get-ChildItem $InstallPath | Remove-Item -Confirm:$false -Force } # Zip Destination $zip = &amp;#34;$InstallPath\AzCopy.Zip&amp;#34; # Create the installation folder (eg. C:\AzCopy) $null = New-Item -Type Directory -Path $InstallPath -Force # Download AzCopy zip for Windows Start-BitsTransfer -Source &amp;#34;https://aka.ms/downloadazcopy-v10-windows&amp;#34; -Destination $zip # Expand the Zip file Expand-Archive $zip $InstallPath -Force # Move to $InstallPath Get-ChildItem &amp;#34;$($InstallPath)\*\*&amp;#34; | Move-Item -Destination &amp;#34;$($InstallPath)\&amp;#34; -Force #Cleanup - delete ZIP and old folder Remove-Item $zip -Force -Confirm:$false Get-ChildItem &amp;#34;$($InstallPath)\*&amp;#34; -Directory | ForEach-Object { Remove-Item $_.</description>
    </item>
    <item>
      <title>Getting started - React web app - PWA</title>
      <link>https://www.bustroker.com/notes/getting-started-react-web-app-pwa/</link>
      <pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/getting-started-react-web-app-pwa/</guid>
      <description>Create react app with typescript npx create-react-app bkr-dilution --template typescript Manifest file for PWA The create-react-app commands already adds manifest.json to make it a Progressive Web App.</description>
    </item>
    <item>
      <title>VS Code - include file output</title>
      <link>https://www.bustroker.com/notes/vs-code-include-file-output/</link>
      <pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/vs-code-include-file-output/</guid>
      <description>In csproj add &amp;lt;ItemGroup&amp;gt; &amp;lt;None Update=&amp;#34;file.exe&amp;#34;&amp;gt; &amp;lt;CopyToOutputDirectory&amp;gt;PreserveNewest&amp;lt;/CopyToOutputDirectory&amp;gt; &amp;lt;/None&amp;gt; &amp;lt;/ItemGroup&amp;gt; </description>
    </item>
    <item>
      <title>New typescript project</title>
      <link>https://www.bustroker.com/notes/new-typescript-project/</link>
      <pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/new-typescript-project/</guid>
      <description>For frontend dev, the simplest web API to joke around with.&#xA;Create the project npm init -y npm install --save-dev typescript nano tsconfig.json // tsconfig.json { &amp;#34;compilerOptions&amp;#34;: { &amp;#34;module&amp;#34;: &amp;#34;commonjs&amp;#34;, &amp;#34;esModuleInterop&amp;#34;: true, &amp;#34;target&amp;#34;: &amp;#34;es6&amp;#34;, &amp;#34;moduleResolution&amp;#34;: &amp;#34;node&amp;#34;, &amp;#34;sourceMap&amp;#34;: true, &amp;#34;outDir&amp;#34;: &amp;#34;dist&amp;#34; }, &amp;#34;lib&amp;#34;: [&amp;#34;es2015&amp;#34;] } Code nano src/app.ts Write the code.&#xA;Compile and run npx tsc node dist/app.js </description>
    </item>
    <item>
      <title>Python OOP console app</title>
      <link>https://www.bustroker.com/notes/python-oop-console-app/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/python-oop-console-app/</guid>
      <description>Python simple app with OOP model # animal.py class Animal: def __init__(self, name, species): self.name = name self.species = species def make_sound(self): pass # Abstract method # dog.py from animal import Animal class Dog(Animal): def __init__(self, name, breed): super().__init__(name, species=&amp;#34;Dog&amp;#34;) self.breed = breed def make_sound(self): return &amp;#34;Woof!&amp;#34; # cat.py from animal import Animal class Cat(Animal): def __init__(self, name, color): super().__init__(name, species=&amp;#34;Cat&amp;#34;) self.color = color def make_sound(self): return &amp;#34;Meow!&amp;#34; # app.py from dog import Dog from cat import Cat def main(): dog1 = Dog(&amp;#34;Buddy&amp;#34;, &amp;#34;Labrador&amp;#34;) cat1 = Cat(&amp;#34;Whiskers&amp;#34;, &amp;#34;Orange&amp;#34;) print(f&amp;#34;{dog1.</description>
    </item>
    <item>
      <title>redis-cli cheatsheet</title>
      <link>https://www.bustroker.com/notes/redis-cli-cheatsheet/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/redis-cli-cheatsheet/</guid>
      <description>Install redis with cli brew install redis Commands redis-cli -h your-cluster-endpoint -p your-cluster-port # all keys keys * # pattern keys prefix-* # key type type &amp;lt;key&amp;gt; # get string key get &amp;lt;key&amp;gt; # get all hash key hgetall &amp;lt;key&amp;gt; # expiration time in seconds # -2 if key doesn&amp;#39;t exist # -1 if key doesn&amp;#39;t expire ttl &amp;lt;key&amp;gt; </description>
    </item>
    <item>
      <title>Run LLM locally</title>
      <link>https://www.bustroker.com/notes/run-llm-locally/</link>
      <pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-llm-locally/</guid>
      <description>Use ollama to run LLMs https://klu.ai/glossary/ollama Install ollama https://ollama.com/download&#xA;Run model llama2 ollama run llama2 </description>
    </item>
    <item>
      <title>Git - forget a file and ignore</title>
      <link>https://www.bustroker.com/notes/git-forget-a-file-and-ignore/</link>
      <pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/git-forget-a-file-and-ignore/</guid>
      <description>Ignore .gitignore will prevent untracked files from being added (without an add -f) to the set of files tracked by Git. However, Git will continue to track any files that are already being tracked.&#xA;To stop tracking a file, we must remove it from the index:&#xA;git rm --cached &amp;lt;file&amp;gt; To remove a folder and all files in the folder recursively:&#xA;git rm -r --cached &amp;lt;folder&amp;gt; The removal of the file from the head revision will happen on the next commit.</description>
    </item>
    <item>
      <title>Docker in Mac with Colima</title>
      <link>https://www.bustroker.com/notes/docker-in-mac-with-colima/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/docker-in-mac-with-colima/</guid>
      <description>Find colima here https://github.com/abiosoft/colima&#xA;Colima replaces Docker Desktop, is used for linux and mac.&#xA;Install colima brew install docker-credential-helper docker brew install colima Run colima colima start Now docker can be run docker ps Also Apparently some applications have an issue finding docker:&#xA;Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running? Just set env variable:&#xA;export DOCKER_HOST=unix://${HOME}/.colima/default/docker.sock </description>
    </item>
    <item>
      <title>Git push from script</title>
      <link>https://www.bustroker.com/notes/git-push-from-script/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/git-push-from-script/</guid>
      <description>Push to github from script mkdir -p ~/.ssh echo &amp;#34;${{ secrets.GITHUB_SSH_PRIVATE_KEY}}&amp;#34; &amp;gt; ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa git push git@github.com:bustroker/bkr.hobies.web.git </description>
    </item>
    <item>
      <title>Send email from bash in Linux</title>
      <link>https://www.bustroker.com/notes/send-email-from-bash-in-linux/</link>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/send-email-from-bash-in-linux/</guid>
      <description>Bash script to send email through SMTP server #!/bin/bash # Install msmtp if it&amp;#39;s not already installed sudo apt-get install msmtp -y # Create a configuration file for msmtp with your SMTP server details cat &amp;gt; ~/.msmtprc &amp;lt;&amp;lt;EOF defaults auth on tls on tls_starttls on tls_certcheck off account aws_ses host email-smtp.eu-central-1.amazonaws.com port 587 from FROM@EMAIL.COM user USER password PASSWORD account default : aws_ses EOF # Set proper permissions for the configuration file chmod 600 ~/.</description>
    </item>
    <item>
      <title>AWS CLI cheatsheet</title>
      <link>https://www.bustroker.com/notes/aws-cli-cheatsheet/</link>
      <pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/aws-cli-cheatsheet/</guid>
      <description>Install amazon lambda tools and templates dotnet tool install --global Amazon.Lambda.Tools dotnet new --install Amazon.Lambda.Templates Authenticate to AWS with SSO Check profiles already available locally&#xA;aws configure list-profiles #or cat ~/.aws/config Authenticate a profile, in this case aws-profile to connect to corresponding account&#xA;aws sso login --profile aws-profile # test by listing s3 buckets aws s3 ls --profile aws-profile #or dotnet lambda list-functions Lambda function - download package Get the url to download the zip package</description>
    </item>
    <item>
      <title>Tools catalog</title>
      <link>https://www.bustroker.com/notes/tools-catalog/</link>
      <pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/tools-catalog/</guid>
      <description>Performance tests https://github.com/ddosify/ddosify&#xA;Docker for mack Colima https://github.com/abiosoft/colima</description>
    </item>
    <item>
      <title>Multiple SSH Keys settings for different github account</title>
      <link>https://www.bustroker.com/notes/multiple-ssh-keys-settings-for-different-github-account/</link>
      <pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/multiple-ssh-keys-settings-for-different-github-account/</guid>
      <description>Create different public key create different ssh key according the article Mac Set-Up Git&#xA;cd ~/.ssh ssh-keygen -t rsa -C &amp;#34;bustroker@email.com&amp;#34; -f &amp;#34;github_bustroker&amp;#34; ssh-keygen -t rsa -C &amp;#34;bkr@email.com&amp;#34; -f &amp;#34;github_bkr&amp;#34; The -C option is a comment to help identify the key. The -f option specifies the file name for the key pair.&#xA;for example, 2 private/public key pairs are created at:&#xA;~/.ssh/github-bustroker&#xD;~/.ssh/github-bustroker.pub&#xD;~/.ssh/github-bkr&#xD;~/.ssh/github-bkr.pub Modify the ssh config $ cd ~/.</description>
    </item>
    <item>
      <title>Configure AWS CLI</title>
      <link>https://www.bustroker.com/notes/configure-aws-cli/</link>
      <pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/configure-aws-cli/</guid>
      <description>From ChatGPT ;P To configure AWS CLI authentication for deploying applications, you can follow these steps:&#xA;Install AWS CLI: If you haven&amp;rsquo;t already, install the AWS CLI on your machine. You can download the AWS CLI installer appropriate for your operating system from the official AWS Command Line Interface documentation.&#xA;Create AWS IAM User: In the AWS Management Console, navigate to the IAM (Identity and Access Management) service. Create a new IAM user or use an existing one that will be used for authentication.</description>
    </item>
    <item>
      <title>Run Trivy from docker on Mac</title>
      <link>https://www.bustroker.com/notes/run-trivy-from-docker-on-mac/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-trivy-from-docker-on-mac/</guid>
      <description>Official documentation: https://aquasecurity.github.io/trivy/v0.38/&#xA;On zsh terminal on a mac Just run the image and pass the trivy commands as documented. To get version:&#xA;docker run aquasec/trivy version Scan code from local file system docker run -v /host/src/to/scan:/target aquasec/trivy --debug fs /target &amp;gt; trivy-output-report.txt File trivy-output-report.txt is created in the host folder where running.&#xA;Documentation for local file system scan https://aquasecurity.github.io/trivy/v0.20.2/getting-started/cli/fs/&#xA;Scan code from repo As per documentation, only public repositories are supported (https://aquasecurity.</description>
    </item>
    <item>
      <title>Vulnerability scan with Trivy</title>
      <link>https://www.bustroker.com/notes/vulnerability-scan-with-trivy/</link>
      <pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/vulnerability-scan-with-trivy/</guid>
      <description>Install Trivy brew install Trivy For zsh terminal trivy fs --severity [CRITICAL,MEDIUM] /path/to/folder </description>
    </item>
    <item>
      <title>Mac environment variable</title>
      <link>https://www.bustroker.com/notes/mac-environment-variable/</link>
      <pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/mac-environment-variable/</guid>
      <description>For zsh terminal nano ~/.zprofile Add variables to the file:&#xA;export VARIABLE=VALUE For bash terminal nano ~/.bash_profile Add variables to the file:&#xA;export VARIABLE=VALUE </description>
    </item>
    <item>
      <title>Java overview</title>
      <link>https://www.bustroker.com/notes/java-overview/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/java-overview/</guid>
      <description>Echosystem https://whichjdk.com/&#xA;Spring boot vs Microprofiles https://www.ibm.com/cloud/blog/migrate-java-microservices-from-spring-to-microprofile-p2&#xA;Spring boot vs Spring MVC https://www.youtube.com/watch?v=e6Ps8I3X-g4</description>
    </item>
    <item>
      <title>Architecture principles</title>
      <link>https://www.bustroker.com/notes/architecture-principles/</link>
      <pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/architecture-principles/</guid>
      <description>Architecture Principles are key to relieve the gatekeeping burden from the Architect, and be able delegate specific decisions to the teams, offering more autonomy. BUT there&amp;rsquo;s a second layer below the principles, which is the SPECIFIC/CONCRETE process that ALSO needs to be put in place to garantie that governance artefacts are produced, e.g., System scoped documentation with both context and components maps/diagrams.&#xA;Principles I find useful Create principles as a living artefact (inspired by Thoughtworks P1) The principles should be a go-to document for dev teams, so ideally in mark-down and shared in a repo with version control and all.</description>
    </item>
    <item>
      <title>Solution Architecture assessment</title>
      <link>https://www.bustroker.com/notes/solution-architecture-assessment/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/solution-architecture-assessment/</guid>
      <description>Checklist of topics to cover Functional level assessment: which applications are there and how users make use of them? (both end users/clients and corporate users/employees) Identify business domains Different functional areas in the frontend website How each of them is related to the revenue-generating processes Multiple regions/countries with different features? Backoffice Reporting/BI User’s requests that the system can&amp;rsquo;t meet atm. User’s main complaints and pain points Examples of manual/human tasks that can/should be automated Non Functional level assessment: SLAs required and main pain points Availability (current/required/critical) Reliability (current/required/critical) Performance (current/required/critical) Security (current/required/critical) Some metrics of the system Concurrent users Number of requests to be processed Bottlenecks detected Tech team’s main complains and pain points Modules and Components diagrams Modules: How is code organized in the repos applications and packages, and how they are related/referenced to each other Components: How are components organized in runtime and how are they related/referenced to each other Services, databases, queues, 3P services… Hosting model: On-prem, PaaS azure service, docker containers Identity management B2C Corporative Multiregion/I18n Data Reporting/BI How is the system’s architecture produced?</description>
    </item>
    <item>
      <title>Databricks submit jar</title>
      <link>https://www.bustroker.com/notes/databricks-submit-jar/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/databricks-submit-jar/</guid>
      <description>Deploy jar file to azure databricks cluster from local. The idea is to push the fat jar to databrick&amp;rsquo;s dbfs using databricks CLI.&#xA;Configure databricks CLI connection Generate and copy PAT token in databricks workspace/User Settings. Then go:&#xA;databricks configure --token Workspace url: https://adb-3772194496043630.10.azuredatabricks.net/&#xA;Push jar file to databricks workspace First, pack to create the JAR&#xA;cd [ProjectRoot]&#xD;sbt assembly Then push the jar to Databricks. (Before, run rm to delete jar from databricks if it exists already).</description>
    </item>
    <item>
      <title>Architecture interview questions</title>
      <link>https://www.bustroker.com/notes/architecture-interview-questions/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/architecture-interview-questions/</guid>
      <description>Questions Difference between the role of the Architect and the Tech Lead&#xA;Main concerns What&amp;rsquo;s the most difficult aspect of the switch from TL to Sln Arch Do you follow any particular mentoring strategy? Do you establish guidelines, best practices? How? How to make sure they are followed? How do you relate with Tech Leads in terms of the design/development process? Mention a couple of web Architecture Styles and describe them =&amp;gt; check this (https://docs.</description>
    </item>
    <item>
      <title>dotnet Software engineer interview questions</title>
      <link>https://www.bustroker.com/notes/dotnet-software-engineer-interview-questions/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/dotnet-software-engineer-interview-questions/</guid>
      <description>Questions https://www.fullstack.cafe/interview-questions/ https://www.fullstack.cafe/interview-questions/design-patterns https://www.fullstack.cafe/interview-questions/ddd&#xA;Ice breaker :P What&amp;rsquo;s new in .net 6/C#10&#xA;HTTP/3 with QUIC (quick UDP internet connection) your favorite new feature? record type in C#9 https://www.infoworld.com/article/3607372/how-to-work-with-record-types-in-csharp-9.html&#xA;Language Interface vs Abstract class value/reference types. null values. how to create a value type? (struct) async/await. why async/await in web api controllers? difference between const and readonly what is yield. Exception handling and logging. Difference between throw and throw ex. IQueriable, IEnumerable ORM usage: EF, ado.</description>
    </item>
    <item>
      <title>Run MSSQL 2019 on Kubernetes</title>
      <link>https://www.bustroker.com/notes/run-mssql-2019-on-kubernetes/</link>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-mssql-2019-on-kubernetes/</guid>
      <description>Secret for sa password kubectl create secret generic mssql --from-literal=SA_PASSWORD=&amp;#34;P@55word&amp;#34; Storage kind: PersistentVolumeClaim apiVersion: v1 metadata: name: mssql-data annotations: volume.beta.kubernetes.io/storage-class: default spec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi Mount optional azure storage account apiVersion: v1 kind: Secret metadata: name: mssql-optionalAddedStorage-secret namespace: sqlserver type: Opaque data: azurestorageaccountname: Z3NhcmNocG9jc3NoYXJlZHN0b3JhZ2U= azurestorageaccountkey: SndPbTRlTFhLSVdWc1IzYkhONFV2WGlUM3NVSjBseHYvbUpQUU5DY1pYNEsyUmhTUjBZY3c5bzdmM3huU2h6bE9KVXhhSFcxT09KSmF4VktxRityVWc9PQ== Values of azurestorageaccountname and azurestorageaccountkey are 64-based account name and key as extracted from Azure. A File Share needs to be created in the storage account and named optionalAddedStorage, as referenced below.</description>
    </item>
    <item>
      <title>Scala hello Futures</title>
      <link>https://www.bustroker.com/notes/scala-hello-futures/</link>
      <pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/scala-hello-futures/</guid>
      <description>Build.sbt scalaVersion := &amp;#34;2.13.6&amp;#34; // Also supports 2.12.x App.scala import scala.concurrent._ import scala.concurrent.duration._ import scala.concurrent.ExecutionContext.Implicits.global object Application extends App { def writeStuff(step: Int, max: Int, name: String) = { for(i &amp;lt;- 1 to max){ Thread.sleep(step*1000) println(s&amp;#34;task $name =&amp;gt; $i s&amp;#34;) } } val futureTask1 = Future { writeStuff(1, 10, &amp;#34;la primera&amp;#34;) } val futureTask2 = Future { writeStuff(2, 8, &amp;#34;la segunda&amp;#34;) } val futures: List[Future[Unit]] = List(futureTask1, futureTask2) futures.map(f =&amp;gt; { println(&amp;#34;===== Sending await for task&amp;#34;) Await.</description>
    </item>
    <item>
      <title>Synapse sql pools credentials</title>
      <link>https://www.bustroker.com/notes/synapse-sql-pools-credentials/</link>
      <pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/synapse-sql-pools-credentials/</guid>
      <description>Create credentials to query datalake container through SQL Pools create credential [https://DATALAKE_ACCOUNT_NAME.dfs.core.windows.net/CONTAINER] with identity=&amp;#39;SHARED ACCESS SIGNATURE&amp;#39;, secret = &amp;#39;?sv=2020-08-04&amp;amp;ss=bfqt&amp;amp;srt=sco&amp;amp;sp=rwdlacupx&amp;amp;se=2022-12-21T21:35:50Z&amp;amp;st=2021-12-21T13:35:50Z&amp;amp;spr=https&amp;amp;sig=************************************&amp;#39; </description>
    </item>
    <item>
      <title>Spark with delta lake</title>
      <link>https://www.bustroker.com/notes/spark-with-delta-lake/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/spark-with-delta-lake/</guid>
      <description>build.sbt ThisBuild / version := &amp;#34;0.1.0&amp;#34; ThisBuild / scalaVersion := &amp;#34;2.13.8&amp;#34; ThisBuild / organization := &amp;#34;bkr&amp;#34; libraryDependencies ++= List(&amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-core&amp;#34; % &amp;#34;3.2.0&amp;#34;, &amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-sql&amp;#34; % &amp;#34;3.2.0&amp;#34;, // % &amp;#34;provided&amp;#34; &amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-sql-kafka-0-10&amp;#34; % &amp;#34;3.2.0&amp;#34;, // % Test &amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-avro&amp;#34; % &amp;#34;3.2.0&amp;#34;) libraryDependencies ++= List(&amp;#34;org.apache.hadoop&amp;#34; % &amp;#34;hadoop-common&amp;#34; % &amp;#34;3.3.1&amp;#34;, &amp;#34;org.apache.hadoop&amp;#34; % &amp;#34;hadoop-azure&amp;#34; % &amp;#34;3.3.1&amp;#34;) libraryDependencies += &amp;#34;org.json4s&amp;#34; %% &amp;#34;json4s-native&amp;#34; % &amp;#34;3.6.12&amp;#34; libraryDependencies += &amp;#34;io.delta&amp;#34; %% &amp;#34;delta-core&amp;#34; % &amp;#34;1.1.0&amp;#34; App.</description>
    </item>
    <item>
      <title>Spark with scala</title>
      <link>https://www.bustroker.com/notes/spark-with-scala/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/spark-with-scala/</guid>
      <description>build.sbt ThisBuild / version := &amp;#34;0.1.0&amp;#34; ThisBuild / scalaVersion := &amp;#34;2.12.13&amp;#34; ThisBuild / organization := &amp;#34;bkr&amp;#34; lazy val KafkaStreamProcessing = (project in file(&amp;#34;.&amp;#34;)) .settings( name := &amp;#34;Bkr.Spark&amp;#34;, libraryDependencies += &amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-core&amp;#34; % &amp;#34;3.1.1&amp;#34;, libraryDependencies += &amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-sql&amp;#34; % &amp;#34;3.1.1&amp;#34;, libraryDependencies += &amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-sql-kafka-0-10&amp;#34; % &amp;#34;3.1.1&amp;#34;, libraryDependencies += &amp;#34;org.apache.spark&amp;#34; %% &amp;#34;spark-avro&amp;#34; % &amp;#34;3.1.1&amp;#34;, // version is critical, or ADLS will fail libraryDependencies += &amp;#34;org.apache.hadoop&amp;#34; % &amp;#34;hadoop-common&amp;#34; % &amp;#34;3.3.1&amp;#34;, libraryDependencies += &amp;#34;org.</description>
    </item>
    <item>
      <title>Kafka Avro Consumer issue workaround</title>
      <link>https://www.bustroker.com/notes/kafka-avro-consumer-issue-workaround/</link>
      <pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/kafka-avro-consumer-issue-workaround/</guid>
      <description>I reported the issue here&#xA;Description AvroDeserializer throws NullReferenceException without any further info.&#xA;Unhandled exception. Confluent.Kafka.ConsumeException: Local: Value deserialization error&#xD;---&amp;gt; System.NullReferenceException: Object reference not set to an instance of an object.&#xD;at Confluent.SchemaRegistry.Serdes.GenericDeserializerImpl.Deserialize(String topic, Byte[] array)&#xD;at Confluent.SchemaRegistry.Serdes.AvroDeserializer`1.DeserializeAsync(ReadOnlyMemory`1 data, Boolean isNull, SerializationContext context)&#xD;at Confluent.Kafka.SyncOverAsync.SyncOverAsyncDeserializer`1.Deserialize(ReadOnlySpan`1 data, Boolean isNull, SerializationContext context)&#xD;at Confluent.Kafka.Consumer`2.Consume(Int32 millisecondsTimeout)&#xD;--- End of inner exception stack trace ---&#xD;at Confluent.Kafka.Consumer`2.Consume(Int32 millisecondsTimeout)&#xD;at Confluent.Kafka.Consumer`2.Consume(TimeSpan timeout)&#xD;at Arch.Pocs.KafkaClient.Consumer.ConsoleUI.KafkaAvroConsumer.Poll(String topic)+MoveNext() in /app/KafkaAvroConsumer.</description>
    </item>
    <item>
      <title>Run Kafka locally with docker compose</title>
      <link>https://www.bustroker.com/notes/run-kafka-locally-with-docker-compose/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-kafka-locally-with-docker-compose/</guid>
      <description>Basic services: zookeeper: image: wurstmeister/zookeeper ports: - &amp;#34;2181:2181&amp;#34; kafka: image: wurstmeister/kafka ports: - &amp;#34;9092:9092&amp;#34; environment: KAFKA_ADVERTISED_HOST_NAME: localhost KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 volumes: - /var/run/docker.sock:/var/run/docker.sock Full stack services: zookeeper: image: confluentinc/cp-zookeeper:6.2.1 hostname: zookeeper container_name: zookeeper ports: - &amp;#34;2181:2181&amp;#34; environment: ZOOKEEPER_CLIENT_PORT: 2181 ZOOKEEPER_SERVER_ID: 1 ZOOKEEPER_SERVERS: zookeeper:2888:3888 kafka: image: confluentinc/cp-kafka:6.2.1 hostname: kafka ports: - &amp;#34;9092:9092&amp;#34; - &amp;#34;9999:9999&amp;#34; environment: KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092 KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL KAFKA_ZOOKEEPER_CONNECT: &amp;#34;zookeeper:2181&amp;#34; KAFKA_BROKER_ID: 1 KAFKA_LOG4J_LOGGERS: &amp;#34;kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO&amp;#34; KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 KAFKA_JMX_PORT: 9999 KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.</description>
    </item>
    <item>
      <title>Scala hello world web api with http4s</title>
      <link>https://www.bustroker.com/notes/scala-hello-world-web-api-with-http4s/</link>
      <pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/scala-hello-world-web-api-with-http4s/</guid>
      <description>Build.sbt scalaVersion := &amp;#34;2.13.6&amp;#34; // Also supports 2.12.x val http4sVersion = &amp;#34;0.23.1&amp;#34; // Only necessary for SNAPSHOT releases resolvers += Resolver.sonatypeRepo(&amp;#34;snapshots&amp;#34;) libraryDependencies ++= Seq( &amp;#34;org.http4s&amp;#34; %% &amp;#34;http4s-dsl&amp;#34; % http4sVersion, &amp;#34;org.http4s&amp;#34; %% &amp;#34;http4s-blaze-server&amp;#34; % http4sVersion, &amp;#34;org.http4s&amp;#34; %% &amp;#34;http4s-blaze-client&amp;#34; % http4sVersion ) Server.scala package bkr.joker.webapi import cats.effect._ import org.http4s.blaze.server._ import scala.concurrent.ExecutionContext.global // import cats.effect._ import org.http4s.HttpRoutes import org.http4s.dsl.io._ import org.http4s.implicits._ object Server extends IOApp { def plot(name: String, lastname: String): String = { s&amp;#34;All work and no play makes $name $lastname a dull boy.</description>
    </item>
    <item>
      <title>Run Jupyter notebook with spark in docker</title>
      <link>https://www.bustroker.com/notes/run-jupyter-notebook-with-spark-in-docker/</link>
      <pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-jupyter-notebook-with-spark-in-docker/</guid>
      <description>Install spark to run locally docker run -p 8888:8888 -p 4041:4041 jupyter/all-spark-notebook The auth token is logged in the terminal. Copy it. In host browse to localhost:8888. Use the token to authenticate in the interface.&#xA;Create new spylon-kernel notebook and write scala code.&#xA;Spark WebUI is running on port 4041</description>
    </item>
    <item>
      <title>Install spark and hadoop in Windows 10</title>
      <link>https://www.bustroker.com/notes/install-spark-and-hadoop-in-windows-10/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/install-spark-and-hadoop-in-windows-10/</guid>
      <description>Install spark to run locally Versions Java java -version openjdk version &amp;#34;1.8.0_292&amp;#34; OpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_292-b10) OpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.292-b10, mixed mode) Scala sbt console Welcome to Scala 2.12.13 (OpenJDK 64-Bit Server VM, Java 1.8.0_292). Install Spark Download from https://spark.apache.org/downloads.html.&#xA;Spark release 3.2.0 For Hadoop 2.7 (previous versions failed me) Folder downloaded and copied as C:\Spark\spark-3.2.0-bin-hadoop2.7. Add system environment variable SPARK_HOME with value C:\Spark\spark-3.2.0-bin-hadoop2.7. Add %SPARK_HOME%\bin to system PATH.</description>
    </item>
    <item>
      <title>Recover lost `PATH` variable</title>
      <link>https://www.bustroker.com/notes/recover-lost-path-variable/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/recover-lost-path-variable/</guid>
      <description>The idea is to open a cmd in the context of an application that was running before the PATH variable was broken, e.g., Chrome. Go to Chrome, hit ctrl+o, and it opens an explorer window. Go to the window&amp;rsquo;s path bar and type cmd and enter. A cmd opens &amp;ldquo;in the context&amp;rdquo; of Chrome. Now just display the PATH variable that was in place when Chrome was executed&#xA;echo %PATH% </description>
    </item>
    <item>
      <title>7zip command line</title>
      <link>https://www.bustroker.com/notes/7zip-command-line/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/7zip-command-line/</guid>
      <description>Unzip tar.gz in windows from powershell 7zip installed and already in the PATH&#xA;7z x filename.tar.gz 7z x filename.tar </description>
    </item>
    <item>
      <title>Git sparse-checkout</title>
      <link>https://www.bustroker.com/notes/git-sparse-checkout/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/git-sparse-checkout/</guid>
      <description>To checkout and work only with a subset/subtree of folders from a repo (yes, some people insist in economizing repos)&#xA;Initialize sparse-checkout config git clone URL --no-checkout # add `--depth 1` to only include latest commit from all commit history cd REPO_ROOT git sparse-checkout init --cone # `--cone` to include root files git checkout Set existing folders to be actually checked out git sparse-checkout add Apps/OtherApp # to add new folders to the current checkout list.</description>
    </item>
    <item>
      <title>Auto hot key to customize keyboard strokes</title>
      <link>https://www.bustroker.com/notes/auto-hot-key-to-customize-keyboard-strokes/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/auto-hot-key-to-customize-keyboard-strokes/</guid>
      <description>Documentation Install autohotkey. Find documentation here.&#xA;Remarks Maximum two keys combinations. Create &amp;lt; and &amp;gt; Create a script for alt+z to be &amp;lt; lessThan.ahk&#xA;!z::&#xD;Send, &amp;lt;&#xD;return Create a script for alt+x to be &amp;gt; greaterThan.ahk&#xA;!x::&#xD;Send, &amp;gt;&#xD;return Double click the files (once AHK is installed) and that&amp;rsquo;s it.&#xA;For running them on startup, create shortcut and copy them into windows startup folder.</description>
    </item>
    <item>
      <title>Install dotnet localhost ssl certificate for development</title>
      <link>https://www.bustroker.com/notes/install-dotnet-localhost-ssl-certificate-for-development/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/install-dotnet-localhost-ssl-certificate-for-development/</guid>
      <description>Install trusted localhost certificate dotnet dev-certs https --trust Confirm when pop up shows up.&#xA;Restart browser and browse to https://locahost:5001, or whatever localhost url, and ssl warning is gone.</description>
    </item>
    <item>
      <title>Scala up and running</title>
      <link>https://www.bustroker.com/notes/scala-up-and-running/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/scala-up-and-running/</guid>
      <description>Installation Java Installed AdoptOpenJDK 11. Other failed in runtime for https issues (apparently, missing the local store that is installed with Java)&#xA;Scala Installed SBT from official site. Get version:&#xA;sbt scalaVersion New project Create project root folder. In the root folder, create build.sbt file. Create [root]/src/main/scala/bkr/data/spark/App.scala file, for a package named bkr.data.spark Content for build.sbt for a project with a subproject&#xA;ThisBuild / version := &amp;#34;0.1.0&amp;#34; ThisBuild / scalaVersion := &amp;#34;2.</description>
    </item>
    <item>
      <title>Run MSSQL server in docker inside vagrant (ubuntu) VM</title>
      <link>https://www.bustroker.com/notes/run-mssql-server-in-docker-inside-vagrant-ubuntu-vm/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-mssql-server-in-docker-inside-vagrant-ubuntu-vm/</guid>
      <description>Files // Vagrantfile&#xD;Vagrant.configure(&amp;#34;2&amp;#34;) do |config|&#xD;config.vm.box = &amp;#34;ubuntu/focal64&amp;#34; # v 20.04 LTS&#xD;config.vm.synced_folder &amp;#34;./&amp;#34;, &amp;#34;/vagrant&amp;#34;&#xD;config.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 9200, host: 9200&#xD;config.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 9300, host: 9300&#xD;config.vm.provision :shell, path: &amp;#34;vagrant_provision.sh&amp;#34; config.vm.provider &amp;#34;virtualbox&amp;#34; do |vb|&#xD;vb.name = &amp;#34;Elasticsearch&amp;#34; vb.memory = 1024&#xD;end&#xD;end // vagrant_provision.sh echo &amp;#34;provisioning VM...&amp;#34;&#xD;sudo apt update&#xD;sudo apt-get update&#xD;# install docker and run&#xD;sudo apt -y install docker.io&#xD;sudo systemctl start docker&#xD;sudo systemctl enable docker&#xD;docker --version&#xD;echo &amp;#34;docker installed and running.</description>
    </item>
    <item>
      <title>Aspnet website in docker in windows, IIS and self-signed certificate</title>
      <link>https://www.bustroker.com/notes/aspnet-website-in-docker-in-windows-iis-and-self-signed-certificate/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/aspnet-website-in-docker-in-windows-iis-and-self-signed-certificate/</guid>
      <description>The application is hosted in a docker container. The actual folder with the app publish, is mapped into the container, so when the code changes it&amp;rsquo;s inmediatly reflected in the running container.&#xA;Dockerfile FROM mcr.microsoft.com/dotnet/framework/aspnet:4.8 SHELL [ &amp;#34;powershell&amp;#34; ] COPY src/Bustroker.LocalEnv.WebUI/bin/app.publish c:/webapp ADD configureIIS.ps1 /windows/temp/configureIIS.ps1 RUN powershell.exe -executionpolicy bypass c:\windows\temp\configureIIS.ps1 Configure IIS script configureIIS.ps1 script, copied into the image on build.&#xA;# Configure SSL certificate for default website Import-Module WebAdministration Set-Location IIS:\SslBindings New-WebBinding -Name &amp;#34;Default Web Site&amp;#34; -IP &amp;#34;*&amp;#34; -Port 443 -Protocol https $c = New-SelfSignedCertificate -DnsName &amp;#34;localhost&amp;#34; -CertStoreLocation cert:\LocalMachine\My $c | New-Item 0.</description>
    </item>
    <item>
      <title>Query sql server from powershell</title>
      <link>https://www.bustroker.com/notes/query-sql-server-from-powershell/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/query-sql-server-from-powershell/</guid>
      <description>Query sqlserver powershell module Install-Module sqlserver -Force A minimun nuget version is required. A messages provides the command to install it if was required.&#xA;Run query Invoke-Sqlcmd -Query &amp;#34;SELECT GETDATE() AS TimeOfQuery&amp;#34; -ServerInstance &amp;#34;localhost&amp;#34; Run script Invoke-Sqlcmd -InputFile &amp;#34;C:\setupscripts\createUser.sql&amp;#34; | Out-File -FilePath &amp;#34;C:\setupscripts\createUser.log&amp;#34; </description>
    </item>
    <item>
      <title>Use sqlcmd cli tool</title>
      <link>https://www.bustroker.com/notes/use-sqlcmd-cli-tool/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/use-sqlcmd-cli-tool/</guid>
      <description>sqlcmd utility (2019) Installed with Visual Studio 2019. (Apparently also with Sql Server 2019, but they dont&amp;rsquo;s explain WHERE it actually is :S)&#xA;Add to path sqlcmd.exe is located in:&#xA;Visual Studio 2019: C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\Extensions\Microsoft\SQLDB\DAC\150 Run a script sqlcmd -S [SERVER] -i C:\setupscripts\createStockUser.sql -o C:\setupscripts\createStockUser.log # e.g. sqlcmd -S localhost -i C:\setupscripts\createUser.sql -o C:\setupscripts\createUser.log Open CLI for queries sqlcmd -S localhost -U sa -P password -d database&#xD;&amp;gt; select * from transactions&#xD;&amp;gt; go Run sqlcmd from docker/kubernetes and connecto to host&amp;rsquo;s localhost sql server docker run --rm -it mcr.</description>
    </item>
    <item>
      <title>Install sql server unattended from Powershell</title>
      <link>https://www.bustroker.com/notes/install-sql-server-unattended-from-powershell/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/install-sql-server-unattended-from-powershell/</guid>
      <description>Download installation from here, run it and use the option Download Media.&#xA;To install Express edition, run powershell as admin and go cd C:\SQL2019\SQLEXPR_x64_ENU .\setup.exe /Q /HIDECONSOLE=0 /ACTION=INSTALL /SUPPRESSPRIVACYSTATEMENTNOTICE /IACCEPTSQLSERVERLICENSETERMS=1 /FEATURES=SQLENGINE /UPDATEENABLED=0 /INSTANCENAME=&amp;#34;MSSQLSERVER&amp;#34; /ADDCURRENTUSERASSQLADMIN=1 /SECURITYMODE=SQL /SKIPRULES=RebootRequiredCheck /SAPWD=&amp;#34;Pasword_01&amp;#34; /SQLSVCSTARTUPTYPE=AUTOMATIC /INDICATEPROGRESS For Developer edition, run powershell as admin and go cd C:\SQL2019\Developer_ENU .\setup.exe /q /ACTION=Install /INSTANCENAME=MSSQLSERVER /FEATURES=SQLEngine /UPDATEENABLED=0 /SQLSVCACCOUNT=&amp;#39;NT AUTHORITY\NETWORK SERVICE&amp;#39; /SQLSYSADMINACCOUNTS=&amp;#39;BUILTIN\ADMINISTRATORS&amp;#39; /TCPENABLED=1 /NPENABLED=0 /IACCEPTSQLSERVERLICENSETERMS /INDICATEPROGRESS /SECURITYMODE=SQL /SAPWD=&amp;#34;Password_01&amp;#34; To uninstall&#xA;.\setup.exe /q /ACTION=Uninstall /INSTANCENAME=MSSQLSERVER /FEATURES=SQLEngine /INDICATEPROGRESS </description>
    </item>
    <item>
      <title>Powershell cheatsheet</title>
      <link>https://www.bustroker.com/notes/powershell-cheatsheet/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/powershell-cheatsheet/</guid>
      <description>Bypass digitally sign constrain for scripts execution Run powershell as Administrator.&#xA;Set-ExecutionPolicy -ExecutionPolicy Unrestricted List environment variables Get-ChildItem -Path Env:\ Also, using .net from powershell, and specifying system-level variables, by specifying machine as second argument. This argument could also be user&#xA;[System.Environment]::GetEnvironmentVariable(&amp;#39;VARIABLE_NAME&amp;#39;,&amp;#39;machine&amp;#39;) For some reason, the previous doesn&amp;rsquo;t work for variable COMPUTERNAME. To get computer name:&#xA;$env:computername Set environment variable Run powershell as Admin.&#xA;new variable [System.Environment]::SetEnvironmentVariable(&amp;#39;VARIABLE_NAME&amp;#39;, &amp;#39;VARIABLE_VALUE&amp;#39;,[System.EnvironmentVariableTarget]::Machine) add to an existing variable (typically to PATH) $current=[System.</description>
    </item>
    <item>
      <title>MSSQL Server 2019 docker image for windows</title>
      <link>https://www.bustroker.com/notes/mssql-server-2019-docker-image-for-windows/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/mssql-server-2019-docker-image-for-windows/</guid>
      <description>MSSQL 2019 not available yet in official images, so&amp;hellip;&#xA;Dockerfile The windows server base images must be the same windows version as the host, as per official documentation (¡¿?!). To get the version open cmd and type ver, to get something like 10.0.19042.867.&#xA;FROM mcr.microsoft.com/windows/servercore:10.0.19042.867 SHELL [ &amp;#34;powershell&amp;#34; ] # Copy COPY ./setupScripts/installSqlServerTools.ps1 /setupScripts/installSqlServerTools.ps1 COPY ./setupScripts/startAndConfigSqlServer.ps1 /setupScripts/startAndConfigSqlServer.ps1 # Copy installers COPY ./installers /installers # install Sql Server Developer edition (see readme.</description>
    </item>
    <item>
      <title>Run MSSQL 2017 server in docker for windows</title>
      <link>https://www.bustroker.com/notes/run-mssql-2017-server-in-docker-for-windows/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-mssql-2017-server-in-docker-for-windows/</guid>
      <description>MSSQL 2019 not available yet in official images.&#xA;Docker compose First check attach_dbs argument. The first time running it, remove it. Afterwards, if starting with an existing db, use it to attach existing mdf/ldf files. They can also be attached from T-Sql after starting the server.&#xA;Note: Mapping localhost folder to default C:/Program Files&amp;hellip; fails, probably for permission reasons (not clear from the message, as usual).&#xA;// docker-compose.yaml version: &amp;#39;3.8&amp;#39; services: SQLServer: image: microsoft/mssql-server-windows-developer:2017 environment: - ACCEPT_EULA=Y - SA_PASSWORD=Password_01 # - attach_dbs=[{&amp;#39;dbName&amp;#39;:&amp;#39;Joker&amp;#39;,&amp;#39;dbFiles&amp;#39;:[&amp;#39;C:\\SQLData\\Joker1.</description>
    </item>
    <item>
      <title>Simplest html empty file</title>
      <link>https://www.bustroker.com/notes/simplest-html-empty-file/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/simplest-html-empty-file/</guid>
      <description>The simplest htmls static files server.&#xA;Create the project and install express package &amp;lt;!doctype html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;The HTML5 Herald&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;The HTML5 Herald&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;author&amp;#34; content=&amp;#34;SitePoint&amp;#34;&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;css/styles.css?v=1.0&amp;#34;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div&amp;gt; &amp;lt;p&amp;gt;Hey Bustro&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script src=&amp;#34;http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;js/scripts.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; alert(&amp;#34;Hey Bustro&amp;#34;); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; </description>
    </item>
    <item>
      <title>Run MSSQL server in docker inside vagrant (ubuntu) VM</title>
      <link>https://www.bustroker.com/notes/run-mssql-server-in-docker-inside-vagrant-ubuntu-vm/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/run-mssql-server-in-docker-inside-vagrant-ubuntu-vm/</guid>
      <description>Files Vagrant VM needs at least 2Gb.&#xA;## Vagrantfile Vagrant.configure(&amp;#34;2&amp;#34;) do |config| config.vm.box = &amp;#34;ubuntu/focal64&amp;#34; # v 20.04 LTS config.vm.synced_folder &amp;#34;./&amp;#34;, &amp;#34;/vagrant&amp;#34; config.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 1433, host: 1433 config.vm.provision :shell, path: &amp;#34;vagrant_provision.sh&amp;#34; config.vm.provider &amp;#34;virtualbox&amp;#34; do |vb| vb.name = &amp;#34;SqlServer&amp;#34; vb.memory = 2048 end end ## vagrant_provision.sh echo &amp;#34;provisioning VM...&amp;#34; sudo apt update sudo apt-get update # install docker and run sudo apt -y install docker.io sudo systemctl start docker sudo systemctl enable docker docker --version echo &amp;#34;docker installed and running.</description>
    </item>
    <item>
      <title>MySql/MariaDb command line cheatsheet</title>
      <link>https://www.bustroker.com/notes/mysql/mariadb-command-line-cheatsheet/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/mysql/mariadb-command-line-cheatsheet/</guid>
      <description>Commands Connect mysql [-h 192.168.1.100] -u USER_NAME -p [DATABASE_NAME] Will be prompted for password&#xA;Once connected, the commanda need to end with ;.&#xA;Common commands ´´´ show tables; ´´´&#xA;Exit Ctrl+C </description>
    </item>
    <item>
      <title>Good reads. Well explained miscelanea subjects</title>
      <link>https://www.bustroker.com/notes/good-reads.-well-explained-miscelanea-subjects/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/good-reads.-well-explained-miscelanea-subjects/</guid>
      <description>About containers and Unix OS About netcore 2.2 host in IIS InProcess/OutOfProcess About netcore compilation and packages About microservices About Java, JRE, JDK and installation Scala module pattern Spark Data processing architectures Streaming analytics SaaS bussines model [Monolith to microservices] notes. (https://danlebrero.com/2022/02/09/monolith-to-microservices-summary/) </description>
    </item>
    <item>
      <title>Simplest single-client TCP client and server</title>
      <link>https://www.bustroker.com/notes/simplest-single-client-tcp-client-and-server/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/simplest-single-client-tcp-client-and-server/</guid>
      <description>Single-client TCP server //Program.cs public class Program { private const int Port = 8080; public static async Task Main(String[] args) { var address = GetLocalIPAddress(); var tcpListener = new TcpListener(GetLocalIPAddress(), Port); tcpListener.Start(); Console.WriteLine($&amp;#34;Server started. Listening to TCP clients at {address}, port {Port}&amp;#34;); while (true) { await WaitForClientConnectionAndHandleAsync(tcpListener); } } static IPAddress GetLocalIPAddress() { var host = Dns.GetHostEntry(Dns.GetHostName()); foreach (var ip in host.AddressList) { if (ip.AddressFamily == AddressFamily.InterNetwork) { return ip; } } throw new Exception(&amp;#34;No network adapters with an IPv4 address in the system!</description>
    </item>
    <item>
      <title>Azure function for CosmosDb Changefeed.</title>
      <link>https://www.bustroker.com/notes/azure-function-for-cosmosdb-changefeed./</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/azure-function-for-cosmosdb-changefeed./</guid>
      <description>Cosmos Create cosmos account, cosmos container Database: arch-pocs-misc-cosmosdb. Container being monitored: Transactions Lease container, required for the changefeed: TransactionsLease. The partition key for the lease container must be /id. Install func cli https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local?tabs=windows%2Ccsharp%2Cbash#install-the-azure-functions-core-tools&#xA;Create function project func init Bustroker.CosmosDbChangeFeed.Func --dotnet [--docker] I renamed csproj file from Bustroker_CosmosDbChangeFeed_Func.csproj to Bustroker.CosmosDbChangeFeed.Func.csproj.&#xA;Check details for development with docker here&#xA;Create ChangeFeed function cd Bustroker.CosmosDbChangeFeed.Func func new --name TransactionsChangeFeed [--template {HttpTrigger, CosmosDbTrigger, etc}] And the code</description>
    </item>
    <item>
      <title>Azure function with docker</title>
      <link>https://www.bustroker.com/notes/azure-function-with-docker/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/azure-function-with-docker/</guid>
      <description>Install func cli https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local?tabs=windows%2Ccsharp%2Cbash#install-the-azure-functions-core-tools&#xA;Create function project func init Bustroker.HttpEndpoint.Func --dotnet --docker I renamed csproj file from Bustroker_HttpEndpoint_Func.csproj to Bustroker.HttpEndpoint.Func.csproj. The docker file is created. No need for docker to be installed. I run docker in Ubuntu VM, with Vagrant.&#xA;Create function cd Bustroker.HttpEndpoint.Func func new --name HttpEndpoint [--template {HttpTrigger, CosmosDbTrigger, etc}] App settings Add required packages dotnet add package Microsoft.Azure.Functions.Extensions dotnet add package Microsoft.NET.Sdk.Functions Make the function class and methods not static and inject IConfiguration in the constructor namespace Bustroker.</description>
    </item>
    <item>
      <title>Azure DevOps yaml pipeline cheatsheet</title>
      <link>https://www.bustroker.com/notes/azure-devops-yaml-pipeline-cheatsheet/</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/azure-devops-yaml-pipeline-cheatsheet/</guid>
      <description>A couple remarks Use a single pipeline for CI-CD, as there seems to be no way to connect BuildId (i.e., container version/tag to deploy) from CI pipeline to CD pipeline. The environment referenced in the deployment jobs are created if doesn&amp;rsquo;t exist The environment is where the approvals are configured, directly in Azure DevOps The pipeline is linked to a git repo in Azure DevOps as well. The pipeline is triggered when the master branch is pushed.</description>
    </item>
    <item>
      <title>Passing arguments to scripts (both `bat` and `bash`)</title>
      <link>https://www.bustroker.com/notes/passing-arguments-to-scripts-both-bat-and-bash/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/passing-arguments-to-scripts-both-bat-and-bash/</guid>
      <description>Windows script .bat //windows-script.bat set firstArgument=%1% set secondArgument=%2% echo You passed first %firstArgument% and second %secondArgument% Call it as&#xA;.\windows-script.bat &amp;#34;little donald&amp;#34; &amp;#34;had a farm&amp;#34; Unix script .bash //unix-script.bash #!/bin/sh firstArgument=$1 secondArgument=$2 echo You passed first $firstArgument and second $secondArgument # to give a default value to the argument arg=&amp;#34;${1:-DEFAULT_VALUE}&amp;#34; Call it as&#xA;bash unix-script.bash &amp;#34;little donald&amp;#34; &amp;#34;had a farm&amp;#34; </description>
    </item>
    <item>
      <title>Curl azure app service with AAD auth</title>
      <link>https://www.bustroker.com/notes/curl-azure-app-service-with-aad-auth/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/curl-azure-app-service-with-aad-auth/</guid>
      <description>Get token curl -X POST -d &amp;#39;grant_type=client_credentials&amp;amp;client_id=&amp;lt;APP_ID&amp;gt;&amp;amp;client_secret=&amp;lt;PASSWORD&amp;gt;&amp;amp;resource=https%3A%2F%2Fmanagement.azure.com%2F&amp;#39; https://login.microsoftonline.com/&amp;lt;TENANT_ID&amp;gt;/oauth2/token Basic POST. application/x-www-form-urlencoded is the default curl -X POST http://localhost:8080/data -d &amp;#34;param1=value1&amp;amp;param2=value2&amp;#34; POST json curl -X POST http://localhost:3000/data -H &amp;#34;Content-Type: application/json&amp;#34; -d &amp;#39;{&amp;#34;key1&amp;#34;:&amp;#34;value1&amp;#34;, &amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;}&amp;#39; POST data from file. application/x-www-form-urlencoded is the default. curl -X POST http://localhost:3000/data -d &amp;#34;@data.txt&amp;#34; Disable certificate validation curl -k https://localhost:8080 Add bearer token header curl -H &amp;#39;Accept: application/json&amp;#39; -H &amp;#34;Authorization: Bearer &amp;lt;TOKEN&amp;gt;&amp;#34; https://bustroker.com/api/resource New line after output curl localhost:8080 ;echo Pretty format json output (Linux) curl localhost:8080 | json_pp also, jq would do it</description>
    </item>
    <item>
      <title>Dotnet Core 3.1 appsettings mapping with IOptions, IOptionsSnapshot and IOptionsMonitor</title>
      <link>https://www.bustroker.com/notes/dotnet-core-3.1-appsettings-mapping-with-ioptions-ioptionssnapshot-and-ioptionsmonitor/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/dotnet-core-3.1-appsettings-mapping-with-ioptions-ioptionssnapshot-and-ioptionsmonitor/</guid>
      <description>Check official documentation here&#xA;For a behaviour summary for each interface see here&#xA;Usage I prefer to create a section called Settings to keep all the parameters, so I&amp;rsquo;ll follow this approach.&#xA;Define AppSettings (or you name it) class class AppSettings { public string AadTenantName { get; set; } public string AadClientApplicationId { get; set; } } Create corresponding parameters in appsettings.json { &amp;#34;Logging&amp;#34;: { &amp;#34;LogLevel&amp;#34;: { ..... } }, &amp;#34;AllowedHosts&amp;#34;: &amp;#34;*&amp;#34;, &amp;#34;Settings&amp;#34;: { &amp;#34;AadTenantName&amp;#34;: &amp;#34;comercia.</description>
    </item>
    <item>
      <title>JMeter command line - Links</title>
      <link>https://www.bustroker.com/notes/jmeter-command-line-links/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/jmeter-command-line-links/</guid>
      <description>JMeter command line https://www.softwarehour.com/jmeter/jmeter-command-line/ https://www.perfmatrix.com/how-to-generate-a-dashboard-report-in-jmeter/</description>
    </item>
    <item>
      <title>Bundling and minification in Aspnet Core MVC</title>
      <link>https://www.bustroker.com/notes/bundling-and-minification-in-aspnet-core-mvc/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/bundling-and-minification-in-aspnet-core-mvc/</guid>
      <description>Static files should be bundled and minified, and forced to be updated by the browser (not cached) when content changes.&#xA;Bundle and minify them To bundle and minify js and css files, add bundleconfig.json file to the project root folder&#xA;[ { &amp;#34;outputFileName&amp;#34;: &amp;#34;wwwroot/css/site.min.css&amp;#34;, &amp;#34;inputFiles&amp;#34;: [ &amp;#34;wwwroot/css/site.css&amp;#34; ] }, { &amp;#34;outputFileName&amp;#34;: &amp;#34;wwwroot/js/site.min.js&amp;#34;, &amp;#34;inputFiles&amp;#34;: [ &amp;#34;wwwroot/js/site.js&amp;#34; ], &amp;#34;minify&amp;#34;: { &amp;#34;enabled&amp;#34;: true, &amp;#34;renameLocals&amp;#34;: true }, &amp;#34;sourceMap&amp;#34;: false } ] Load them Add the reference to the page</description>
    </item>
    <item>
      <title>Very basic logging to console from netcore webapi with Serilog</title>
      <link>https://www.bustroker.com/notes/very-basic-logging-to-console-from-netcore-webapi-with-serilog/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/very-basic-logging-to-console-from-netcore-webapi-with-serilog/</guid>
      <description>Add serilog required packages&#xA;dotnet add package Serilog.AspNetCore&#xD;dotnet add package Serilog.Sinks.ElasticSearch Using&#xA;using Serilog; using Serilog.Sinks.Elasticsearch; Configure serilog on CreateHostBuilder. Only relevant code is included.&#xA;public class Program { private const string ApplicationId = &amp;#34;Bustroker.Transactions.WebApi&amp;#34;; private const string ElasticEndpoint = &amp;#34;http://localhost:9200&amp;#34;; ///.... ///.... ///.... ///.... public static IHostBuilder CreateHostBuilder(string[] args) =&amp;gt; Host.CreateDefaultBuilder(args) .UseSerilog((hostincContext, loggerConfiguration) =&amp;gt; // send to Elastic for real time monitoring ConfigureSerilogLoggerWithElastic(loggerConfiguration) ) .ConfigureWebHostDefaults(webBuilder =&amp;gt; { webBuilder.UseStartup&amp;lt;Startup&amp;gt;(); }); private static LoggerConfiguration ConfigureSerilogLoggerWithElastic(LoggerConfiguration loggerConfiguration) { var sinkOptions = new ElasticsearchSinkOptions(new Uri(ElasticEndpoint)) { AutoRegisterTemplate = true, AutoRegisterTemplateVersion = AutoRegisterTemplateVersion.</description>
    </item>
    <item>
      <title>Build native mobile packages from html/css/js app with PhoneGap Build cloud service</title>
      <link>https://www.bustroker.com/notes/build-native-mobile-packages-from-html/css/js-app-with-phonegap-build-cloud-service/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/build-native-mobile-packages-from-html/css/js-app-with-phonegap-build-cloud-service/</guid>
      <description>Note: PhoneGap and PhoneGap Build are going to be shut down&#xA;General idea Startup with an html/js/css app. Build an APK from the front-end web app using PhoneGap Build cloud service. Unfortunatly Phonegap CLI fails for some weird reason, so the I had to manually zip it before posting it to the API (the API doesn&amp;rsquo;t fail but expects the zip up to where I got).&#xA;Phonegap Build account Create an account in https://build.</description>
    </item>
    <item>
      <title>Deploy dotnet core app to heroku</title>
      <link>https://www.bustroker.com/notes/deploy-dotnet-core-app-to-heroku/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/deploy-dotnet-core-app-to-heroku/</guid>
      <description>An aspnet core web app/api app is assumed to have been implemented already. Following is how to deploy it.&#xA;Heroku PORT Heroku saves in the environment variable PORT, the port where the application should listen. So the port needs to be changed to that one.&#xA;//Program.cs public static IHostBuilder CreateHostBuilder(string[] args) =&amp;gt; Host.CreateDefaultBuilder(args) .ConfigureWebHostDefaults(webBuilder =&amp;gt; { var herokuPort = Environment.GetEnvironmentVariable(&amp;#34;PORT&amp;#34;); if (!string.IsNullOrWhiteSpace(herokuPort)) { webBuilder.UseUrls($&amp;#34;http://*:{herokuPort}&amp;#34;); } webBuilder.UseStartup&amp;lt;Startup&amp;gt;(); }); Dockerfile FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env WORKDIR /app # Copy csproj and restore as distinct layers COPY *.</description>
    </item>
    <item>
      <title>Setup aspnet core app with vagrant and docker</title>
      <link>https://www.bustroker.com/notes/setup-aspnet-core-app-with-vagrant-and-docker/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/setup-aspnet-core-app-with-vagrant-and-docker/</guid>
      <description>Create dotnet application. For example, a webapi The webapi will be named Bustroker.Notes.WebApi.&#xA;dotnet new webapi -n Bustroker.Notes.WebApi Create linux VM with Vagrant I rather a linux vm to work with docker. Check the post Vagrant VM provision &amp;amp; vagrant commands cheathsheet for Vagrantfile and provision script. From there select the tools required in the VM. In the example port 8080 of VM is mapped to port 8080 in host. If another is required, it needs to be set.</description>
    </item>
    <item>
      <title>Helm 3 commands cheatsheet</title>
      <link>https://www.bustroker.com/notes/helm-3-commands-cheatsheet/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/helm-3-commands-cheatsheet/</guid>
      <description>Create .tgz package from chart folder content cd chart helm package . Deploy local tgz package to kubernetes The terminal must have been authenticated. In case of AKS, run az aks get-credentials --resource-group &amp;lt;RESOURCEGROUP_NAME&amp;gt; --name &amp;lt;AKS_CLUSTERNAME&amp;gt;&#xA;helm install &amp;lt;RELEASE_NAME&amp;gt; &amp;lt;TGZ_PACKAGE&amp;gt; List releases in kubernetes helm list&#xD;helm get all &amp;lt;RELEASE_NAME&amp;gt; Deploy chart from registry No direct way for the moment. Need to pull, export and then install&#xA;helm chart pull &amp;lt;PACKAGE_REPO_WITH_VERSION&amp;gt;&#xD;helm chart export &amp;lt;PACKAGE_REPO_WITH_VERSION&amp;gt;&#xD;helm install &amp;lt;RELEASE_NAME&amp;gt; &amp;lt;EXPORTED_CHART_FOLDER&amp;gt; helm chart export will create a folder named after the chart (chart.</description>
    </item>
    <item>
      <title>Kubernetes (1.7) commands cheatsheet</title>
      <link>https://www.bustroker.com/notes/kubernetes-1.7-commands-cheatsheet/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/kubernetes-1.7-commands-cheatsheet/</guid>
      <description>Version: 1.6&#xA;Contexts kubectl config get-contexts kubectl config delete-context CONTEXT_NAME kubectl config set-context --current --namespace=NAMESPACE kubectl config use-context CONTEXT_NAME Run pod from image kubectl run NAME --image=image [--env=&amp;#34;key=value&amp;#34;] Get info kubectl get pods [-o wide] kubectl describe service SERVICE_NAME kubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=NODE_NAME Delete all pods with a label kubectl delete pods -l label=value Delete all pods in a specific state pods, in Linux E.g., STATE=Evicted</description>
    </item>
    <item>
      <title>Docker cheatsheet</title>
      <link>https://www.bustroker.com/notes/docker-cheatsheet/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/docker-cheatsheet/</guid>
      <description>Version: 19.03&#xA;build image and set tag -t docker build -t bustroker.notes.webui:v1 . multiple tags are allowed as well&#xA;docker build -t bustroker.notes.webui:v1 -t bustroker.notes.webui:latest . build image and see commands output For debugging issues. E.g., run RUN ls and see out put&#xA;docker build -t bustroker.notes.webui --progress=plain --no-cache . tag image docker tag [localImage] [registryServer]/[imageName]:[version] # ej docker tag bustroker.notes.webui:v1 bustrokeracr.azurecr.io/bustroker.notes.webui:v1 add tag to existing tagged image docker tag bustroker.</description>
    </item>
    <item>
      <title>Docker compose</title>
      <link>https://www.bustroker.com/notes/docker-compose/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/docker-compose/</guid>
      <description>Docker compose services: zookeeper: image: debezium/zookeeper ports: - &amp;#34;2181:2181&amp;#34; - &amp;#34;2888:2888&amp;#34; - &amp;#34;3888:3888&amp;#34; kafka: image: debezium/kafka ports: - &amp;#34;9092:9092&amp;#34; volumes: - /var/run/docker.sock:/var/run/docker.sock depends_on: - &amp;#34;zookeeper&amp;#34; connect: image: debezium/connect ports: - &amp;#34;8083:8083&amp;#34; environment: - GROUP_ID=1 - CONFIG_STORAGE_TOPIC=my_connect_configs - OFFSET_STORAGE_TOPIC=my_connect_offsets - STATUS_STORAGE_TOPIC=my_connect_statuses depends_on: - &amp;#34;kafka&amp;#34; docker-compose terminal into service container docker-compose up exec [SERVICE_NAME] [TERMINAL] #or docker compose run --entrypoint /bin/sh [SERVICE_NAME] [TERMINAL] could be sh, cmd, powershell&amp;hellip;&#xA;docker-compose # launch the containers docker-compose up [-d] [--build] # launch the containers and opens interactive terminal inside docker-compose run [SERVICE] # stop and remove containers docker-compose down # stop the containers, without removing docker-compose stop </description>
    </item>
    <item>
      <title>Appsettings &amp; env variables</title>
      <link>https://www.bustroker.com/notes/appsettings-env-variables/</link>
      <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/appsettings-env-variables/</guid>
      <description>Reading apppsettings.json in dotnet 3.1 Add the packages&#xA;dotnet add package Microsoft.Extensions.Configuration&#xD;dotnet add package Microsoft.Extensions.Configuration.FileExtensions&#xD;dotnet add package Microsoft.Extensions.Configuration.Json Add appsettings.json file with required parameters&#xA;{ &amp;#34;Settings&amp;#34;: { &amp;#34;Params&amp;#34;: { &amp;#34;Param1&amp;#34;: &amp;#34;value 1&amp;#34;, &amp;#34;Param2&amp;#34;: &amp;#34;value 2&amp;#34; } } } Load configuration section Console app // Program.cs var builder = new ConfigurationBuilder() .SetBasePath(Directory.GetCurrentDirectory()) .AddJsonFile(&amp;#34;appsettings.json&amp;#34;, optional: true, reloadOnChange: true); IConfiguration configuration = builder.Build(); Use configuration&#xA;var param1 = configuration.GetSection(&amp;#34;Settings&amp;#34;).GetValue&amp;lt;string&amp;gt;(&amp;#34;Params:Param1&amp;#34;); Web Api // Program.</description>
    </item>
    <item>
      <title>Very basic logging to console from netcore webapi with Serilog</title>
      <link>https://www.bustroker.com/notes/very-basic-logging-to-console-from-netcore-webapi-with-serilog/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/very-basic-logging-to-console-from-netcore-webapi-with-serilog/</guid>
      <description>Add serilog&#xA;dotnet add package Serilog.AspNetCore public class Program { public static void Main(string[] args) { Log.Logger = new LoggerConfiguration() .MinimumLevel.Debug() .MinimumLevel.Override(&amp;#34;Microsoft&amp;#34;, LogEventLevel.Information) .Enrich.FromLogContext() .WriteTo.Console() .CreateLogger(); try { Log.Information(&amp;#34;Starting web host&amp;#34;); CreateHostBuilder(args).Build().Run(); } catch (Exception ex) { Log.Fatal(ex, &amp;#34;Host terminated unexpectedly&amp;#34;); } finally { Log.CloseAndFlush(); } } public static IHostBuilder CreateHostBuilder(string[] args) =&amp;gt; Host.CreateDefaultBuilder(args) .UseSerilog() .ConfigureWebHostDefaults(webBuilder =&amp;gt; { webBuilder.UseStartup&amp;lt;Startup&amp;gt;(); }); } Then add&#xA;// Startup.cs public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { if (env.</description>
    </item>
    <item>
      <title>Very basic logging to file from Console app with Serilog</title>
      <link>https://www.bustroker.com/notes/very-basic-logging-to-file-from-console-app-with-serilog/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/very-basic-logging-to-file-from-console-app-with-serilog/</guid>
      <description>Add serilog&#xA;dotnet add package Serilog static async Task Main(string[] args) { Log.Logger = new LoggerConfiguration() .Enrich.FromLogContext() .WriteTo.Console() .WriteTo.File(&amp;#34;logs/log.json&amp;#34;) .CreateLogger(); Log.Information(&amp;#34;Running..&amp;#34;); } </description>
    </item>
    <item>
      <title>Configure a rewrite url in web.config, for IIS hosted apps</title>
      <link>https://www.bustroker.com/notes/configure-a-rewrite-url-in-web.config-for-iis-hosted-apps/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/configure-a-rewrite-url-in-web.config-for-iis-hosted-apps/</guid>
      <description>Rewrite is not a redirect, it doesn&amp;rsquo;t respond with 3xx in an API call case, and doesn&amp;rsquo;t change the url in the browser in a web app case. It&amp;rsquo;s a mapping of urls from what is exposed by IIS to what is actually exposed by the app.&#xA;Here the documentation.&#xA;Simplest case If the API exponses an endpoint &amp;ldquo;/internalendpoint&amp;rdquo; and I want to actually have it publicly as &amp;ldquo;/publicendpoint&amp;rdquo;&#xA;&amp;lt;?xml version=&amp;#34;1.</description>
    </item>
    <item>
      <title>ILogger&lt;TCategory&gt; with azure app service Application Insights, plus Live Metrics</title>
      <link>https://www.bustroker.com/notes/iloggertcategory-with-azure-app-service-application-insights-plus-live-metrics/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/iloggertcategory-with-azure-app-service-application-insights-plus-live-metrics/</guid>
      <description>Add Application Insights to the webapi Add the package dotnet add package Microsoft.ApplicationInsights.AspnetCore Register the service // Startup.cs public void ConfigureServices(IServiceCollection services) { services.AddApplicationInsightsTelemetry(); ... } Set the instrumentation key in the appsettings.json. It can also be provided to AddApplicationInsightsTelemetry method when registering the service.&#xA;// appsettings.json { &amp;#34;ApplicationInsights&amp;#34;: { &amp;#34;InstrumentationKey&amp;#34;: &amp;#34;putinstrumentationkeyhere&amp;#34; }, .... } Add the ApplicationInsights logging provider This is for the ILogger injected object to send to ApplicationInsights as well.</description>
    </item>
    <item>
      <title>Basics of .Net Core 3.1 ILogger&lt;TCategory&gt;</title>
      <link>https://www.bustroker.com/notes/basics-of-.net-core-3.1-iloggertcategory/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/basics-of-.net-core-3.1-iloggertcategory/</guid>
      <description>Applying it to logging to Log Streaming in Azure Web app net core 3.1, (and to Console)&#xA;netcore 3.1 basic console logging Azure app services real time logs monitoring for troubleshooting.&#xA;Log Stream Add package to write to Azure File dotnet add package Microsoft.Extensions.Logging.AzureAppServices Add the provider I like to add the Console provider as well so I can check what&amp;rsquo;s going on when running locally too, but it&amp;rsquo;s not required for the portal Log Streaming.</description>
    </item>
    <item>
      <title>Azure Managed Identity token with cURL</title>
      <link>https://www.bustroker.com/notes/azure-managed-identity-token-with-curl/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/azure-managed-identity-token-with-curl/</guid>
      <description>To test Managed Identity is working fine, SSH inside the VM with Managed Identity enabled (or RDP, for that matter) and cURL an access token for some resource.&#xA;curl &amp;#34;http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&amp;amp;resource=https%3A%2F%2Fmanagement.azure.com%2F&amp;#34; -H Metadata:true -s resource query parameter, as per documentation:&#xA;&amp;ldquo;A query string parameter, indicating the App ID URI of the target resource. It also appears in the aud (audience) claim of the issued token. This example requests a token to access Azure Resource Manager, which has an App ID URI of https://management.</description>
    </item>
    <item>
      <title>cURL usefull commands cheatsheet</title>
      <link>https://www.bustroker.com/notes/curl-usefull-commands-cheatsheet/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/curl-usefull-commands-cheatsheet/</guid>
      <description>Basic GET curl localhost:8080 Basic POST. application/x-www-form-urlencoded is the default curl -X POST http://localhost:8080/data -d &amp;#34;param1=value1&amp;amp;param2=value2&amp;#34; curl -X POST http://localhost:3000/data -d &amp;#34;@data.txt&amp;#34; POST json curl -X POST http://localhost:3000/data -H &amp;#34;Content-Type: application/json&amp;#34; -d &amp;#39;{\&amp;#34;key1\&amp;#34;:\&amp;#34;value1\&amp;#34;, \&amp;#34;key2\&amp;#34;:\&amp;#34;value2\&amp;#34;}&amp;#39; curl -X POST http://localhost:3000/data -H &amp;#34;Content-Type: application/json&amp;#34; -d &amp;#34;@data.json&amp;#34; Double quotes are escaped with \, required for powershell.&#xA;Disable certificate validation curl -k https://localhost:8080 Add bearer token header curl https://bustroker.com/api/resource -H &amp;#39;Accept: application/json&amp;#39; -H &amp;#34;Authorization: Bearer &amp;lt;TOKEN&amp;gt;&amp;#34; New line after output curl localhost:8080 ;echo [Linux] Pretty format json output curl localhost:8080 | json_pp also, jq would do it</description>
    </item>
    <item>
      <title>Create file from command line in Windows</title>
      <link>https://www.bustroker.com/notes/create-file-from-command-line-in-windows/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/create-file-from-command-line-in-windows/</guid>
      <description>Create a file with some content from command line in windows from any console&#xA;echo &amp;#34;whate ever content&amp;#34; &amp;gt; filename.txt </description>
    </item>
    <item>
      <title>Python data science cheatsheet</title>
      <link>https://www.bustroker.com/notes/python-data-science-cheatsheet/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/python-data-science-cheatsheet/</guid>
      <description>Pandas import pandas as pd&#xA;Load CSV with &amp;lsquo;;&amp;rsquo; separator df = pd.read_csv(&amp;ldquo;data/entryRequests.csv&amp;rdquo;, sep = &amp;ldquo;;&amp;rdquo;, parse_dates=[[&amp;ldquo;Date&amp;rdquo;, &amp;ldquo;Time&amp;rdquo;]])&#xA;Print column names print(df.columns)&#xA;Importing pd.read_csv(filename) # From a CSV file pd.read_table(filename) # From a delimited text file (like TSV) pd.read_excel(filename) # From an Excel file pd.read_sql(query, connection_object) # Read from a SQL table/database pd.read_json(json_string) # Read from a JSON formatted string, URL or file. pd.read_html(url) # Parses an html URL, string or file and extracts tables to a list of dataframes pd.</description>
    </item>
    <item>
      <title>Nuget.config file</title>
      <link>https://www.bustroker.com/notes/nuget.config-file/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/nuget.config-file/</guid>
      <description>In Azure DevOps&amp;rsquo; Package Feed, the user bustroker.packages.restore@bustroker.onmicrosoft.com needs to be added explicitly as a Reader, in the Feed&amp;rsquo;s Security tab. Then generate a Read Package PAT for that user.&#xA;//nuget.config &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;packageSources&amp;gt; &amp;lt;clear /&amp;gt; &amp;lt;add key=&amp;#34;BustrokerPackages&amp;#34; value=&amp;#34;https://pkgs.dev.azure.com/bustroker/_packaging/Bustroker.Packages./nuget/v3/index.json&amp;#34; /&amp;gt; &amp;lt;/packageSources&amp;gt; &amp;lt;packageSourceCredentials&amp;gt; &amp;lt;BustrokerPackages&amp;gt; &amp;lt;add key=&amp;#34;Username&amp;#34; value=&amp;#34;bustroker.packages.restore@bustroker.onmicrosoft.com&amp;#34; /&amp;gt; &amp;lt;!-- Azure DevOps PAT that can ONLY ReadPackages --&amp;gt; &amp;lt;add key=&amp;#34;ClearTextPassword&amp;#34; value=&amp;#34;CLEAR_PAT&amp;#34; /&amp;gt; &amp;lt;/BustrokerPackages&amp;gt; &amp;lt;/packageSourceCredentials&amp;gt; &amp;lt;/configuration&amp;gt; Environment Variables can be used as well //nuget.</description>
    </item>
    <item>
      <title>Enable app service healthcheck from az CLI</title>
      <link>https://www.bustroker.com/notes/enable-app-service-healthcheck-from-az-cli/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/enable-app-service-healthcheck-from-az-cli/</guid>
      <description>There&amp;rsquo;s a new healthcheck feature available, in preview as of 18-01-2020 (the link url includes &amp;lsquo;preview&amp;rsquo;, so it&amp;rsquo;ll probably break when the feature goes GA&amp;hellip;)&#xA;When healthcheck is enabled:&#xA;the platform sends requests, apparently every minute aprox, to monitor the specified health endpoint. As per the logs, the request seem to be sent every minute in a round robin, alternating all the VM instances behind the app service balancer. if Easy Auth is set for the app service, then for the configured endpoint it is disabled so it can be hit without authentication.</description>
    </item>
    <item>
      <title>Azure Api App failing on startup with 500.30</title>
      <link>https://www.bustroker.com/notes/azure-api-app-failing-on-startup-with-500.30/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/azure-api-app-failing-on-startup-with-500.30/</guid>
      <description>When the app startup fails, it does so silently. Or effectivly silently: complaining without providing relevant information. This is the IIS complain&#xA;&amp;lt;body&amp;gt; &amp;lt;h1&amp;gt; HTTP Error 500.30 - ANCM In-Process Start Failure &amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt; Common solutions to this issue: &amp;lt;/h2&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;The application failed to start&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;The application started but then stopped&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;The application started but threw an exception during startup&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt; &amp;lt;h2&amp;gt; Troubleshooting steps: &amp;lt;/h2&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt; Check the system event log for error messages &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; Enable logging the application process&amp;#39; stdout messages &amp;lt;/li&amp;gt; &amp;lt;li&amp;gt; Attach a debugger to the application process and inspect &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;h2&amp;gt; For more information visit: &amp;lt;a href=&amp;#34;https://go.</description>
    </item>
    <item>
      <title>Azure App Configuration refresh on demand</title>
      <link>https://www.bustroker.com/notes/azure-app-configuration-refresh-on-demand/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/azure-app-configuration-refresh-on-demand/</guid>
      <description>Here&amp;rsquo;s what Azure App Configuration Service is.&#xA;Here&amp;rsquo;s how to use it.&#xA;How the web api middleware uses the App Configuration Client As per oficial documentation, refering to&#xA;// Startup.Configure(IApplicationBuilder app, IWebHostEnvironment env)&#xD;app.UseAzureAppConfiguration(); &amp;ldquo;The middleware uses the refresh configuration specified in the AddAzureAppConfiguration method in Program.cs to trigger a refresh for each request received by the ASP.NET Core web app. For each request, a refresh operation is triggered and the client library checks if the cached value for the registered configuration setting has expired.</description>
    </item>
    <item>
      <title>Handling parallel exceptions in dotnet</title>
      <link>https://www.bustroker.com/notes/handling-parallel-exceptions-in-dotnet/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/handling-parallel-exceptions-in-dotnet/</guid>
      <description>I&amp;rsquo;m executing several tasks in parallel, where more than one throw exceptions. I want to handle all the exceptions, which basically means catching them all and being able to, at least, rethrowing them with all the info they carry.&#xA;So, here it is how&#xA;var runnersTasks = new List&amp;lt;Task&amp;gt;();// list to keep the tasks created Task compositeTask = null; // task consisting in waiting for all the tasks to finish in parallel try { // run all the tasks and keep them in the list Runners.</description>
    </item>
    <item>
      <title>Azure App Configuration with Key Vault and Managed Identity in HA</title>
      <link>https://www.bustroker.com/notes/azure-app-configuration-with-key-vault-and-managed-identity-in-ha/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/azure-app-configuration-with-key-vault-and-managed-identity-in-ha/</guid>
      <description>Here&amp;rsquo;s what Azure App Configuration Service is.&#xA;And I want a production ready setup:&#xA;use it to serve secret params as well, keeping them in Key Vault access it with Managed Identity(MI). have it in High Availability How Azure App Configuration client works Here&amp;rsquo;s how the client works, using the sentinel pattern, i.e., using one key to be the one that the client actually checks to know whether or not a full configuration refresh is needed.</description>
    </item>
    <item>
      <title>Basic usage IHttpClientFactory</title>
      <link>https://www.bustroker.com/notes/basic-usage-ihttpclientfactory/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/basic-usage-ihttpclientfactory/</guid>
      <description>Register it //Startup.cs public void ConfigureServices(IServiceCollection services) { ... services.AddHttpClient(); } Use it //HealthController.cs private readonly IHttpClientFactory _clientFactory; public HealthController(IHttpClientFactory clientFactory) { _clientFactory = clientFactory; } </description>
    </item>
    <item>
      <title>Change directory to different drive in Windows cmd</title>
      <link>https://www.bustroker.com/notes/change-directory-to-different-drive-in-windows-cmd/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/change-directory-to-different-drive-in-windows-cmd/</guid>
      <description>To change from C drive to D drive, going cd D: or any similar, doesn&amp;rsquo;t work. Instead go:&#xA;C:\Users\bustroker&amp;gt; d:&#xD;D:\&amp;gt; </description>
    </item>
    <item>
      <title>A cool terminal for windows with context menu</title>
      <link>https://www.bustroker.com/notes/a-cool-terminal-for-windows-with-context-menu/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/a-cool-terminal-for-windows-with-context-menu/</guid>
      <description>No installation, cool colors, with context menu to open directly in a folder.&#xA;Install Donwload cmder terminal, unzip, copy to the folder you prefer (just not any Administrator-required-to-work-on folder).&#xA;Context menu shortcut To add Shortcut in context menu for Open Cmder here, open a cmd as Administrator, and go:&#xA;cd c:\cmder\folder&#xD;.\cmder.exe /REGISTER ALL </description>
    </item>
    <item>
      <title>Kusto cheatsheet</title>
      <link>https://www.bustroker.com/notes/kusto-cheatsheet/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/kusto-cheatsheet/</guid>
      <description>requests durations distribution with steps (bins) of 100 ms app(&amp;#34;bustroker-sales-webapi&amp;#34;).requests&#xD;| where name == &amp;#34;POST SalesController/Post&amp;#34;&#xD;| project req_timestamp = timestamp, req_id = id, req_name = name, req_url = url, req_success = success, req_resultCode = resultCode, req_duration = duration, req_operation_name = operation_Name, req_operation_Id = operation_Id&#xD;| summarize count() by bin(req_duration, 100)&#xD;| sort by req_duration asc&#xD;| render timechart requests duration percentiles and requests dependencies duration percentiles app(&amp;#34;bustroker-sales-webapi&amp;#34;).requests&#xD;| where name == &amp;#34;POST SalesControler/Post&amp;#34;&#xD;| project req_timestamp = timestamp, req_id = id, req_name = name, req_url = url, req_success = success, req_resultCode = resultCode, req_duration = duration, req_operation_name = operation_Name, req_operation_Id = operation_Id&#xD;| summarize count(), avg(req_duration), stdev(req_duration) , percentiles(req_duration, 25, 50, 95, 99)&#xD;| project type_tag = &amp;#34;Core Request&amp;#34;, total = count_ , avg_duration = avg_req_duration, stdev = stdev_req_duration, percentile_duration_25 = percentile_req_duration_25, percentile_duration_50 = percentile_req_duration_50, percentile_duration_95 = percentile_req_duration_95, percentile_duration_99 = percentile_req_duration_99 | union(&#xD;app(&amp;#34;bustroker-sales-webapi&amp;#34;).</description>
    </item>
    <item>
      <title>Vagrant VM provision &amp; vagrant commands cheathsheet</title>
      <link>https://www.bustroker.com/notes/vagrant-vm-provision-vagrant-commands-cheathsheet/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/vagrant-vm-provision-vagrant-commands-cheathsheet/</guid>
      <description>Vagrantfile Vagrant.configure(&amp;#34;2&amp;#34;) do |config| # config.vm.box = &amp;#34;debian/bullseye64&amp;#34; config.vm.box = &amp;#34;ubuntu/focal64&amp;#34; # v 20.04 LTS config.vm.synced_folder &amp;#34;./&amp;#34;, &amp;#34;/vagrant&amp;#34; config.vm.network &amp;#34;forwarded_port&amp;#34;, guest: 8080, host: 8080 config.vm.provision :shell, path: &amp;#34;vagrant_provision.sh&amp;#34; config.vm.provider &amp;#34;virtualbox&amp;#34; do |vb| vb.name = &amp;#34;UbuntuBionic&amp;#34; vb.memory = 2048 # vb.gui = true end end Vagrant provision script Create a file vagrant_provision.sh in the same folder of Vagrantfile, with the following content. Just remove the tools not required, here&amp;rsquo;s all I&amp;rsquo;ve ever needed.</description>
    </item>
    <item>
      <title>Create dotnet core sln with class library plus xunit tests with cli for vscode</title>
      <link>https://www.bustroker.com/notes/create-dotnet-core-sln-with-class-library-plus-xunit-tests-with-cli-for-vscode/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/create-dotnet-core-sln-with-class-library-plus-xunit-tests-with-cli-for-vscode/</guid>
      <description>Create a folder for the solution and cd into it A solution (sln file) is required to be able to have projects referencing others.&#xA;mkdir Bustroker.Notes&#xD;cd Bustroker.Notes Create solution The sln file is created directly in the folder it&amp;rsquo;s run.&#xA;dotnet new sln -n Bustroker.Notes Create class library project and add it to the solution A folder is created, containing the project&#xA;dotnet new classlib -n Bustroker.Notes&#xD;dotnet sln add Bustroker.</description>
    </item>
    <item>
      <title>Voice commands assistant in node</title>
      <link>https://www.bustroker.com/notes/voice-commands-assistant-in-node/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/voice-commands-assistant-in-node/</guid>
      <description>Shirka is a nodejs voice command assistant based in pocketsphinx, living in a RaspberryPi3. Nodered ties all up.&#xA;The Ears Shirka_ears listens for voice commands through the microphone, and publishes them in a mosquitto queue. It&amp;rsquo;s based in pocketsphinx, a &amp;ldquo;a lightweight speech recognition engine, specifically tuned for handheld and mobile devices, though it works equally well on the desktop &amp;ldquo;, in their own saying.&#xA;The Voice Shirka_voice is a listener to another mosquitto queue that receives the messages, creates a WAF file using pico2wave text-to-speech engine, and reproduces them with omxplayer.</description>
    </item>
    <item>
      <title>Simplest node express static files server</title>
      <link>https://www.bustroker.com/notes/simplest-node-express-static-files-server/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/simplest-node-express-static-files-server/</guid>
      <description>The simplest node static files server.&#xA;Create the project and install express package npm init npm install express --save Create server.js file in the root. // server.js const express = require(&amp;#39;express&amp;#39;); const app = express(); app.use(express.static(&amp;#39;www&amp;#39;)) /* routes root &amp;#39;/&amp;#39; to index.html */ app.get(&amp;#39;/&amp;#39;, (req, res) =&amp;gt; { res.sendFile(&amp;#39;/index.html&amp;#39;); }) app.listen(3000, () =&amp;gt; console.log(&amp;#39;Listening on port 3000..&amp;#39;)); Create a static page Now all files in www folder are being served. Create a www folder in the root and add an html file.</description>
    </item>
    <item>
      <title>Simplest node express web API</title>
      <link>https://www.bustroker.com/notes/simplest-node-express-web-api/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/simplest-node-express-web-api/</guid>
      <description>For frontend dev, the simplest web API to joke around with.&#xA;Create the project and install express package&#xA;npm init npm install express Node server Create server.js file in the root.&#xA;// ./server.js const express = require(&amp;#39;express&amp;#39;); const app = express(); app.get(&amp;#39;/&amp;#39;, (req, res) =&amp;gt; { res.send({ message: &amp;#34;I&amp;#39;m here&amp;#34;}); }); app.listen(3000, () =&amp;gt; console.log(&amp;#39;Listening on port 3000!&amp;#39;)); Run it&#xA;node server.js Test it&#xA;curl localhost:3000 Package it in a docker container # .</description>
    </item>
    <item>
      <title>Mortgage simulator in python</title>
      <link>https://www.bustroker.com/notes/mortgage-simulator-in-python/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://www.bustroker.com/notes/mortgage-simulator-in-python/</guid>
      <description>Implemented as per explanation by Universidad de Valencia&amp;rsquo;s Professor Carlos Ivorra, in the article Las matemáticas de una hipoteca about &amp;ldquo;underlying math in mortgage loans&amp;rdquo;. The full pdf article (in spanish) is here.&#xA;The code is in spanish and by the way, it&amp;rsquo;s so cool to be able to name variables in python using spanish accents. It brough out a smile :).&#xA;The important part class Calculadora: def __init__(self): return def interés_efectivo_mensual(self, euríbor, diferencial_interés): # (divido tb por 100 para tener el por-uno) return (euríbor + diferencial_interés) / 1200 def cuota(self, monto_préstamo, interés_efectivo_mensual, total_de_meses): c_0 = monto_préstamo i = interés_efectivo_mensual N = total_de_meses return (c_0 * i) / (1-(1 + i)**(-N)) def deuda_después_de_n_pagos(self, monto_cuota, interés_efectivo_mensual, total_de_meses, n): c = monto_cuota i = interés_efectivo_mensual N = total_de_meses return c/i * (1 - (1+i)**(n-N)) Talk is cheap Here&amp;rsquo;s the code.</description>
    </item>
  </channel>
</rss>
